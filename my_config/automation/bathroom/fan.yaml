# #####################################################################################
#
# BATHROOM
#
# #####################################################################################
# Bathroom Fan - On Manual
# ##################################
- alias: bathroom_button_b
  initial_state: 'true'
  mode: restart
  trigger:
    - platform: state
      entity_id: sensor.0x158d0001b94abe_action
  condition:
    - condition: template
      value_template: >-
        {{ trigger.to_state.state in ['single', 'double', 'hold'] }}
  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: sensor.0x158d0001b94abe_action
              state: 'single'
            - condition: template
              value_template: "{{ is_state('light.mirror_light_b','off') and is_state('switch.0x4cf8cdf3c7a9a48_channel_2','off') }}"
          sequence:
            - service: xiaomi_miio.light_set_scene
              entity_id: light.mirror_light_b
              data:
                scene: 4
        - conditions:
            - condition: state
              entity_id: sensor.0x158d0001b94abe_action
              state: 'double'
            - condition: template
              value_template: "{{ is_state('light.mirror_light_b','off') and is_state('switch.0x4cf8cdf3c7a9a48_channel_2','off') }}"
          sequence:
            - service: xiaomi_miio.light_set_scene
              entity_id: light.mirror_light_b
              data_template:
                scene: 1
        - conditions:
            - condition: state
              entity_id: sensor.0x158d0001b94abe_action
              state: 'hold'
            - condition: template
              value_template: "{{ is_state('light.mirror_light_b','off') and is_state('switch.0x4cf8cdf3c7a9a48_channel_2','off') }}"
          sequence:
            - service: switch.turn_on
              entity_id: switch.0x4cf8cdf3c7a9a48_channel_2
              
        - conditions:
            - condition: state
              entity_id: sensor.0x158d0001b94abe_action
              state: 'single'
            - condition: state
              entity_id: switch.esp32_bathroom_node_relay_3
              state: 'off'
            - condition: template
              value_template: "{{ is_state('light.mirror_light_b','on') or is_state('switch.0x4cf8cdf3c7a9a48_channel_2','on') }}"
          sequence:
            - service: script.bathroom_fan_10m
        - conditions:
            - condition: state
              entity_id: sensor.0x158d0001b94abe_action
              state: 'single'
            - condition: state
              entity_id: switch.esp32_bathroom_node_relay_3
              state: 'on'
            - condition: template
              value_template: "{{ is_state('light.mirror_light_b','on') or is_state('switch.0x4cf8cdf3c7a9a48_channel_2','on') }}"
          sequence:
            - service: switch.turn_off
              entity_id: switch.esp32_bathroom_node_relay_3
              
        - conditions:
            - condition: state
              entity_id: sensor.0x158d0001b94abe_action
              state: 'double'
            - condition: template
              value_template: "{{ is_state('light.mirror_light_b','on') or is_state('switch.0x4cf8cdf3c7a9a48_channel_2','on') }}"
          sequence:
            - service_template: switch.turn_{%if is_state('switch.0x158d0002482619_switch','on')%}off{%else%}on{%endif%} #service: switch.toggle
              entity_id: switch.0x158d0002482619_switch


# ##################################
# Bathroom Fan - Auto
# ##################################
- alias: bathroom_fans_auto
  initial_state: 'true'
  trigger:
    - platform: time_pattern
      minutes: '/3'
  action:
    - choose:
        - conditions:
            - condition: template
              #value_template: "{{ (states('sensor.0x158d00020d7c3a_humidity')|int - states('sensor.humidity_average')|int) <= 5 and is_state('switch.esp32_bathroom_node_relay_3','on') }}"
              value_template: "{{ (states('sensor.0x158d00020d7c3a_humidity')|int < 55) and is_state('switch.esp32_bathroom_node_relay_3','on') or (is_state('light.mirror_light_b','on') or is_state('switch.0x4cf8cdf3c7a9a48_channel_2','on'))}}"
          sequence:
            - service: switch.turn_off
              entity_id: switch.esp32_bathroom_node_relay_3, switch.0x158d0002482619_switch
        - conditions:
            - condition: template
              #value_template: "{{ ((states('sensor.0x158d00020d7c3a_humidity')|int - states('sensor.humidity_average')|int) >= 10) and (is_state('switch.0x4cf8cdf3c7a9a48_channel_2','off') and is_state('light.mirror_light_b','off')) and is_state('switch.esp32_bathroom_node_relay_3','off') }}"
              value_template: "{{ (states('sensor.0x158d00020d7c3a_humidity')|int > 60 and is_state('switch.0x4cf8cdf3c7a9a48_channel_2','off') and is_state('light.mirror_light_b','off')) and is_state('switch.esp32_bathroom_node_relay_3','off') and is_state('switch.esp32_bathroom_node_relay_4','off')}}"
          sequence:
            - service: switch.turn_on
              entity_id: switch.esp32_bathroom_node_relay_3, switch.0x158d0002482619_switch

# ##################################
# Bathroom - Bottom Fan On
# ##################################
- alias: bathroom_bottom_fan
  initial_state: 'true'
  trigger:
    - platform: time
      at: '07:00:03'
    - platform: time
      at: '23:00:03'
  condition:
    - condition: state
      entity_id: input_boolean.security_mode
      state: 'off'
  action:
    - service_template: "switch.turn_{%if states('binary_sensor.tod_day')%}off{%else%}on{%endif%}"
      data:
        entity_id: switch.0x158d0002482619_switch

# ##################################
# Bathroom - Bottom Fan Toggle
# ##################################
- alias: bathroom_bottom_fan_toggle
  initial_state: 'true'
  trigger:
    - platform: time_pattern
      minutes: "/30"
  condition:
    condition: and
    conditions: 
      - condition: state
        entity_id: binary_sensor.tod_day
        state: 'off'
      - condition: state
        entity_id: input_boolean.security_mode
        state: 'off'
  action:
    - service_template: switch.turn_{%if is_state('switch.0x158d0002482619_switch','on')%}off{%else%}on{%endif%} #service: switch.toggle
      entity_id: switch.0x158d0002482619_switch