substitutions:
  board_name: d1mini32_bed_leds
  
esphome:
  name: ${board_name}
  platform: ESP32
  board: wemos_d1_mini32

wifi:
  ssid: !secret wifi_ssid_k
  password: !secret wifi_pass
  domain: .localdomain
  reboot_timeout: 10min
  output_power: 17.5dB
  fast_connect: true
  power_save_mode: none
  manual_ip:
    static_ip: 192.168.1.34
    gateway: 192.168.1.1
    subnet: 255.255.255.0
    dns1: 192.168.1.1
    dns2: 8.8.8.8

logger:

api:
  reboot_timeout: 0s

ota:

web_server:
  port: 80

output:
  - platform: ledc
    id: left_strip
    pin: GPIO16

  - platform: ledc
    id: right_strip
    pin: GPIO17

light:
  - platform: monochromatic
    name: ${board_name}_Strip_Dima
    output: left_strip
    id: light_d

  - platform: monochromatic
    name: ${board_name}_Strip_Sandra
    output: right_strip
    id: light_s
  
binary_sensor:
  - platform: status
    name: ${board_name}_Status

  - platform: homeassistant
    name: ${board_name}_ha_bed_led_enabled
    id: ha_led
    entity_id: input_boolean.bed_led_enable

  - platform: gpio
    pin:
      number: GPIO18
      inverted: false
    name: ${board_name}_Motion_Sandra
    device_class: motion
    id: motion_s
    on_press:
      then:
        - if:
            condition:
              and: 
                - or:
                    - sun.is_below_horizon: 
                    - sensor.in_range:
                        id: sun_elevation
                        below: 5.0     
                - not:
                    binary_sensor.is_off: ha_led
                #- light.is_off: light_s
            then:
              - light.turn_on: 
                  id: light_s
                  brightness: 25%

  - platform: gpio
    pin:
      number: GPIO19
      inverted: false
    name: ${board_name}_Motion_Dima
    device_class: motion
    id: motion_d
    on_press:
      then:
        - if:
            condition:
              and:
                - or:
                    - sun.is_below_horizon: 
                    - sensor.in_range:
                        id: sun_elevation
                        below: 5.0                
                - not:
                    binary_sensor.is_off: ha_led
                #- light.is_off: light_d
            then:
              - light.turn_on: 
                  id: light_d
                  brightness: 25%

text_sensor:
  - platform: template
    name: ${board_name}_Uptime
    lambda: |-
      uint32_t dur = id(uptime_sensor).state;
      int dys = 0;
      int hrs = 0;
      int mnts = 0;
      if (dur > 86399) {
        dys = trunc(dur / 86400);
        dur = dur - (dys * 86400);
      }
      if (dur > 3599) {
        hrs = trunc(dur / 3600);
        dur = dur - (hrs * 3600);
      }
      if (dur > 59) {
        mnts = trunc(dur / 60);
        dur = dur - (mnts * 60);
      }
      char buffer[17];
      sprintf(buffer, "%ud %02uh %02um %02us", dys, hrs, mnts, dur);
      return {buffer};
    icon: mdi:clock-start
    update_interval: 15s

sensor:
  - platform: uptime
    name: ${board_name}_Uptime_s
    id: uptime_sensor
    update_interval: 15s

  - platform: adc
    pin: GPIO34
    name: ${board_name}_Occupancy_Dima_Raw
    update_interval: 5s

  - platform: adc
    pin: GPIO35
    name: ${board_name}_Occupancy_Sandra_Raw
    update_interval: 5s

  - platform: wifi_signal
    name: ${board_name}_WiFi_RSSI
    update_interval: 60s

  - platform: sun
    name: ${board_name}_Sun_Elevation
    type: elevation
    id: sun_elevation
  - platform: sun
    name: ${board_name}_Sun_Azimuth
    type: azimuth  
    id: sun_azimuth

switch:
  - platform: restart
    name: ${board_name}_Restart

sun:
  latitude: !secret my_lat
  longitude: !secret my_long

time:
  - platform: homeassistant
    id: homeassistant_time
  - platform: sntp
    id: sntp_time
    timezone: Europe/Moscow
    on_time:
      - seconds: 15
        then:
          - if:
              condition:
                and: 
                  - for:
                      time: 20s
                      condition:
                        binary_sensor.is_off: motion_d
                  - light.is_on: light_d
              then:
                - light.turn_off: 
                    id: light_d
                    transition_length: 5s
      - seconds: 15
        then:
          - if:
              condition:
                  - for:
                      time: 20s
                      condition:
                        binary_sensor.is_off: motion_s
                  - light.is_on: light_s      
              then:
                - light.turn_off:
                    id: light_s
                    transition_length: 5s
                