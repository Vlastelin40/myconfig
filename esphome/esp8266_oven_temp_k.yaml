substitutions:
  board_name: esp8266_oven_temp_k

esphome:
  name: ${board_name}
  platform: ESP8266
  board: nodemcuv2
  comment: ESP8266 Oven Temperature K

wifi:
  ssid: !secret wifi_ssid_k
  password: !secret wifi_pass
  domain: .local
  reboot_timeout: 15min
  #output_power: 17dB
  fast_connect: true
  #power_save_mode: none
  # networks:
  #   - ssid: !secret wifi_ssid_k
  #     password: !secret wifi_pass
  #     hidden: true
  #     bssid: !secret wifi_bssid_hs_iot
  #     priority: 2
  #   - ssid: !secret wifi_ssid
  #     password: !secret wifi_pass
  #     hidden: false
  #     bssid: !secret wifi_bssid_hs_main
  #     priority: 1
  #   - ssid: !secret wifi_ssid
  #     password: !secret wifi_pass
  #     hidden: false
  #     priority: 0  
  manual_ip:
    static_ip: 192.168.1.29
    gateway: 192.168.1.1
    subnet: 255.255.255.0
    dns1: 192.168.1.1
    dns2: 8.8.8.8

logger:
  baud_rate: 0
  
api:
  reboot_timeout: 0s

ota:

web_server:
  port: 80

spi:
  miso_pin: GPIO12
  clk_pin: GPIO14

binary_sensor:
  - platform: status
    name: ${board_name}_Status
  
  - platform: template
    name: ${board_name}_Oven_Status
    lambda: |-
      if (id(oven_temp).state > 50) {
        return true;
      } else {
        return false;
      }
    device_class: heat
    
text_sensor:
  - platform: template
    name: ${board_name}_Uptime
    lambda: |-
      uint32_t dur = id(uptime_sensor).state;
      int dys = 0;
      int hrs = 0;
      int mnts = 0;
      if (dur > 86399) {
        dys = trunc(dur / 86400);
        dur = dur - (dys * 86400);
      }
      if (dur > 3599) {
        hrs = trunc(dur / 3600);
        dur = dur - (hrs * 3600);
      }
      if (dur > 59) {
        mnts = trunc(dur / 60);
        dur = dur - (mnts * 60);
      }
      char buffer[17];
      sprintf(buffer, "%ud %02uh %02um %02us", dys, hrs, mnts, dur);
      return {buffer};
    icon: mdi:clock-start
    update_interval: 15s

sensor:
  - platform: uptime
    name: ${board_name}_Uptime_s
    id: uptime_sensor
    update_interval: 15s

  - platform: max6675
    name: ${board_name}
    cs_pin: GPIO15
    update_interval: 15s
    id: oven_temp
    filters:
      - sliding_window_moving_average:
          window_size: 3
          send_every: 1    
          
  - platform: wifi_signal
    name: ${board_name}_WiFi_RSSI

  - platform: adc
    pin: VCC
    name: ${board_name}_Vcc
    update_interval: 15s    

button:
  - platform: restart
    name: ${board_name}_Restart

time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Moscow