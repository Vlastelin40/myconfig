# ############################################################################
# MQTT Broker Uptime sensor
# ############################################################################
  - platform: mqtt
    name: MQTT broker uptime
    state_topic: "$SYS/broker/uptime"
    expire_after: 150
    force_update: true
    value_template: "{{ value.split(' ').0|int(0) }}"
    icon: mdi:av-timer
    unit_of_measurement: seconds
  
  - platform: template
    sensors:
      mqtt_broker_uptime_text:
        friendly_name: MQTT Broker Uptime Text
        icon_template: mdi:av-timer
        value_template: >-
          {%- set test = states('sensor.mqtt_broker_uptime')|int(0) -%}
          {% set minutes = ((test % 3600) / 60) | int(0) %}
          {% set hours = ((test % 86400) / 3600) | int(0) %}
          {% set days = (test / 86400) | int(0) %}
          
          {%if days > 0 %}{{days}}d {% endif %}{%if hours > 0 %}{{hours}}h {% endif %}{%if minutes > 0  or test >60 %}{{ minutes}}m{%else%}<1m{%endif%}
        attribute_templates:
          days: "{{ (states('sensor.mqtt_broker_uptime')|int(0) / 86400) | int(0) }}"
          hours: "{{ ((states('sensor.mqtt_broker_uptime')|int(0) % 86400) / 3600) | int(0) }}"
          minutes: "{{ ((states('sensor.mqtt_broker_uptime')|int(0) % 3600) / 60) | int(0) }}"
          raw: "{{ states('sensor.mqtt_broker_uptime')|int(0) }}"

# ############################################################################
# Zigbee2mqtt Uptime sensor
# ############################################################################
  # - platform: template
  #   sensors:
  #     zigbee2mqtt_uptime_text:
  #       friendly_name: Zigbee2mqtt Bridge Uptime Text
  #       icon_template: mdi:av-timer
  #       value_template: >
  #         {%- set test = (states('sensor.zigbee2mqtt_bridge_uptime')|int(0)) -%}
  #         {% set minutes = ((test % 3600) / 60) | int(0) %}
  #         {% set hours = ((test % 86400) / 3600) | int(0) %}
  #         {% set days = (test / 86400) | int(0) %}
          
  #         {%if days > 0 %}{{days}}d {% endif %}{%if hours > 0 %}{{hours}}h {% endif %}{%if minutes >0  or test >60 %}{{ minutes}}m{%else%}<1m{%endif%}
  #       attribute_templates:
  #         days: "{{ (states('sensor.zigbee2mqtt_bridge_uptime')|int(0) / 86400) | int(0) }}"
  #         hours: "{{ ((states('sensor.zigbee2mqtt_bridge_uptime')|int(0) % 86400) / 3600) | int(0) }}"
  #         minutes: "{{ ((states('sensor.zigbee2mqtt_bridge_uptime')|int(0) % 3600) / 60) | int(0) }}"
  #         raw: "{{ states('sensor.zigbee2mqtt_bridge_uptime')|int(0) }}" 

# ############################################################################
# Uptime sensor
# ############################################################################
  - platform: uptime
    name: HA Start

  - platform: template
    sensors:
      ha_uptime:
        friendly_name: HA Uptime 
        icon_template: mdi:clock
        value_template: "{{ ((as_timestamp(now())|int(0)-as_timestamp(states('sensor.ha_start'))|int(0)) / 60 )|int(0) }}"
        unit_of_measurement: minutes

  - platform: template
    sensors:
      ha_uptime_text:
        friendly_name: HA Uptime Text
        icon_template: mdi:clock
        value_template: >-
          {%- set test = states('sensor.ha_uptime')|int(0) -%}
          {%- set minutes = (test % 60) | int(0) %} 
          {%- set hours = ((test % 1440) /60) | int(0) %}
          {%- set days = (test / 1440)|int(0) -%}
          
          {%if days > 0 %}{{days}}d {% endif %}{%if hours > 0 %}{{hours}}h {% endif %}{%if minutes > 0  or test >60 %}{{minutes}}m{%else%}0m{%endif%}
        attribute_templates:
          days: "{{( states('sensor.ha_uptime')|int(0) / 1440)|int(0) }}"
          hours: "{{ ((states('sensor.ha_uptime')|int(0) % 1440) /60) | int(0) }}"
          minutes: "{{ (states('sensor.ha_uptime')|int(0) % 60) | int(0) }}"
          raw: "{{ states('sensor.ha_uptime')|int(0) }}"

# ############################################################################
# HA Uptime CLI sensor
# ############################################################################
  # - platform: command_line
  #   name: ha_init
  #   command: 'cat /config/home-assistant.log | grep -o "initialized[[:space:]]in[[:space:]][0-9]\+.[0-9]\+" | grep -o "[0-9]\+.[0-9]\+$" || echo -1'
  #   scan_interval: 60
  #   unit_of_measurement: s

  - platform: template
    sensors: 
      host_uptime:
        friendly_name: Host Uptime
        unit_of_measurement: minutes
        value_template: "{{ ( ( as_timestamp(now()) - as_timestamp(states('sensor.last_boot')) ) / (60) ) | int(0) }}"
        
      host_uptime_text:
        friendly_name: Host Uptime Text
        icon_template: mdi:clock-outline
        value_template: >-
          {%- set test = states('sensor.host_uptime')|int(0) -%}
          {%- set minutes = (test % 60) | int(0) %} 
          {%- set hours = ((test % 1440) /60) | int(0) %}
          {%- set days = (test / 1440)|int(0) -%}

          {%if days > 0 %}{{days}}d {% endif %}{%if hours > 0 %}{{hours}}h {% endif %}{%if minutes > 0  or test >60 %}{{ minutes}}m{%else%}0m{%endif%}
        attribute_templates:
          days: "{{ (states('sensor.host_uptime')|int(0) / 1440)|int(0) }}"
          hours: "{{ ((states('sensor.host_uptime')|int(0) % 1440) /60) | int(0) }}"
          minutes: "{{ (states('sensor.host_uptime')|int(0) % 60) | int(0) }}"
          raw: "{{ states('sensor.host_uptime')|int(0) }}"