substitutions:
  board_name: sonoff_dual_k

esphome:
  name: ${board_name}
  platform: ESP8266
  board: esp01_1m
  comment: Sonoff Dual R2 Kitchen Work Light

wifi:
  ssid: !secret wifi_ssid_k
  password: !secret wifi_pass
  domain: .localdomain
  reboot_timeout: 0s
  fast_connect: true
  power_save_mode: none
  manual_ip:
    static_ip: 192.168.1.70
    gateway: 192.168.1.1
    subnet: 255.255.255.0

logger:

api:
  reboot_timeout: 0s

ota:

web_server:
  port: 80

# output:
#   - platform: esp8266_pwm
#     id: blue_led
#     pin: GPIO13
#     inverted: True

# light:
#   - platform: binary
#     name: ${board_name}_StatusLED
#     #internal: true
#     output: blue_led
#     id: main_led

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO10
      mode: INPUT_PULLUP
      inverted: True
    name: "${board_name}_button"
    #toggle both relays on push
    on_press:
      - switch.toggle: relay1
      - switch.toggle: relay2

  - platform: status
    name: ${board_name}_Status

switch:
  - platform: gpio
    name: "${board_name}_relay1"
    pin: GPIO12
    id: relay1
  - platform: gpio
    name: "${board_name}_relay2"
    pin: GPIO05
    id: relay2

  - platform: restart
    name: ${board_name}_Restart

status_led:
  pin:
    number: GPIO13
    #inverted: yes

sensor:
  - platform: uptime
    name: ${board_name}_Uptime_s
    id: uptime_sensor

  - platform: wifi_signal
    name: ${board_name}_WiFi_RSSI
    update_interval: 60s

  
text_sensor:
  - platform: template
    name: ${board_name}_Uptime
    lambda: |-
      uint32_t dur = id(uptime_sensor).state;
      int dys = 0;
      int hrs = 0;
      int mnts = 0;
      if (dur > 86399) {
        dys = trunc(dur / 86400);
        dur = dur - (dys * 86400);
      }
      if (dur > 3599) {
        hrs = trunc(dur / 3600);
        dur = dur - (hrs * 3600);
      }
      if (dur > 59) {
        mnts = trunc(dur / 60);
        dur = dur - (mnts * 60);
      }
      char buffer[17];
      sprintf(buffer, "%ud %02uh %02um %02us", dys, hrs, mnts, dur);
      return {buffer};
    icon: mdi:clock-start
    update_interval: 15s

time:
  - platform: homeassistant
    id: homeassistant_time