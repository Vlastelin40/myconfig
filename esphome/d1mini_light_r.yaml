substitutions:
  board_name: d1mini_light_r
 
esphome:
  name: ${board_name}
  platform: ESP8266
  board: d1_mini
  comment: D1 Mini Work Light R

wifi:
  ssid: !secret wifi_ssid_k
  password: !secret wifi_pass
  #domain: .local
  reboot_timeout: 15min
  #output_power: 17.5dB
  fast_connect: true
  #power_save_mode: none
  manual_ip:
    static_ip: 192.168.1.
    gateway: 192.168.1.1
    subnet: 255.255.255.0
    dns1: 192.168.1.1
    dns2: 8.8.8.8
    
logger:
  baud_rate: 0

api:
  reboot_timeout: 0s

ota:

web_server:
  port: 80


binary_sensor:
  - platform: status
    name: ${board_name}_Status

  - platform: gpio
    name: ${board_name}_Button
    pin: 
      number: GPIO12
      #mode: INPUT_PULLUP
      #inverted: true
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms         
    on_press:
      then:
        - switch.toggle: relay

text_sensor:
  - platform: template
    name: ${board_name}_Uptime
    lambda: |-
        int seconds = round(id(uptime_sensor).raw_state);
        int days = seconds / (24 * 3600);
        seconds = seconds % (24 * 3600);
        int hours = seconds / 3600;
        seconds = seconds % 3600;
        int minutes = seconds /  60;
        seconds = seconds % 60;
        return (
          (days ? to_string(days) + "d " : "00d ") +
          (hours ? to_string(hours) + "h " : "00h ") +
          (minutes ? to_string(minutes) + "m " : "00m ") +
          (to_string(seconds) + "s")
        );
    icon: mdi:clock-start
    update_interval: 15s

sensor:
  - platform: uptime
    name: ${board_name}_Uptime_s
    id: uptime_sensor
    update_interval: 15s

  - platform: wifi_signal
    name: ${board_name}_WiFi_RSSI
    update_interval: 60s    

  - platform: adc
    pin: VCC
    name: ${board_name}_VCC

switch:
  - platform: restart
    name: ${board_name}_Restart

  - platform: gpio
    name: ${board_name}_Relay
    pin: GPIO05 #D1
    id: relay
    icon: mdi:spotlight

    
time:
  - platform: sntp
    id: sntp_time
    timezone: UTC-3