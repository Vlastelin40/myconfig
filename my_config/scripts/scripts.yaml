  washing_machine_runs_reset:
    alias: Washing Machine Runs Counter Reset
    sequence:
      - service: counter.reset
        entity_id: counter.washing_machine_runs

  bed_led_toggle_v:
    alias: Bed LED Toggle V
    sequence:
      - service: input_boolean.toggle
        entity_id: input_boolean.bed_led_enable

  ha_released_update:
    alias: HA Released version update from server
    sequence:
      service: homeassistant.update_entity
      entity_id: 
        - sensor.ha_supervisor_current_version
        - sensor.ha_supervisor_latest_version
        - sensor.ha_supervisor_latest_beta
        - sensor.ha_installed_version
        - sensor.ha_latest_version
        - sensor.ha_latest_beta

  speedtest_manual:
    alias: Speedtest
    sequence:
      - service: speedtestdotnet.speedtest

  purge_db:
    alias: Purge Main DB
    sequence:
      - service: recorder.purge
        data:
          keep_days: 1
          repack: true

  noop:
    alias: Dummy
    mode: parallel
    max: 5
    max_exceeded: silent
    sequence:
      - delay:
          seconds: 0.1 
      
  water_off:
    alias: Turn Water Off
    sequence:
      - service: switch.turn_on
        entity_id: switch.esp32_bathroom_node_relay_1
      - delay: '00:00:25'
      - service: switch.turn_off
        entity_id: switch.esp32_bathroom_node_relay_1

  water_on:
    alias: Turn Water On
    sequence:
      - service: switch.turn_on
        entity_id: switch.esp32_bathroom_node_relay_2
      - delay: '00:00:25'
      - service: switch.turn_off
        entity_id: switch.esp32_bathroom_node_relay_2

  battery_level_check:
    alias: Battery Level Check
    sequence:
      - service: script.turn_on
        data_template:
          entity_id: >
            {% set num_low_bat = expand('group.batteries') | selectattr('state','<=','50') | map(attribute='name') | list | count %}
            {% if num_low_bat >0 %}
              script.battery_level_low
            {% else %}
              script.battery_level_ok
            {% endif%}

  battery_level_low:
    alias: Battery Level Low
    sequence:
      - service: notify.telegram
        data_template:
          message: >
            {% set low_bat = expand('group.batteries') | selectattr('state','<=',states('input_number.battery_low_level')) | map(attribute='name') | list | join(', ') %}
          
            {% set num_low_bat = expand('group.batteries') | selectattr('state','<=',states('input_number.battery_low_level')) | map(attribute='name') | list | count %}
            {{"\U0001f6a8"}} Низкий заряд батарей ({{ num_low_bat}}шт): {{low_bat}}


  
  battery_level_ok:
    alias: Battery Level Ok
    sequence:
      - service: notify.telegram
        data:
          message: "\U0001f50b Батарей с уровнем заряда ниже {{states('input_number.battery_low_level')|int}}% не найдено!"


  tts_test:
    alias: Test TTS
    sequence:
      - service: media_player.volume_set
        data_template:
          entity_id: media_player.{{states('input_select.main_audio_out')|lower}}
          volume_level: '{{states("input_number.main_volume")|float}}'
      - service: tts.yandextts_say
        data_template:
          entity_id: media_player.{{states('input_select.main_audio_out')|lower}}
          message: "Проверка звука!"

  # circadian_lighting_toggle:
  #   alias: Circadian Lightning Toggle All
  #   sequence:
  #     - service: switch.toggle
  #       entity_id: switch.circadian_lighting_all
  #     - service_template: "switch.turn_{%if is_state('switch.circadian_lighting_all','on')%}on{%else%}off{%endif%}"
  #       entity_id:
  #         - switch.circadian_lighting_k
  #         - switch.circadian_lighting_s
  #         - switch.circadian_lighting_v
  #         - switch.circadian_lighting_mb

  unknown_state:
    alias: Unknown State
    sequence:
      - service: notify.telegram
        data_template:
          message: >
            {% set unk_list = states | selectattr ('state', 'in', ['unknown','unavailable']) | map(attribute='entity_id') | list | join(', ') %}
            {% set unk_count = states | selectattr ('state', 'in', ['unknown','unavailable']) | list | length  %}
            
            {% if unk_count >0 %}{{"\U0001f4f6"}} Не определено {{unk_count}}сущностей: {{unk_list}}
            {%else%}{{"\U00002705"}}Все сущности определены!{%endif%}
        
        
  # washing_machine_state:
  #   alias: Washing Machine State
  #   sequence:
  #     - service: input_select.select_option
  #       data_template:
  #         entity_id: input_select.washer_state
  #         option: >
  #           {% if is_state('binary_sensor.washer_b','on') and is_state('binary_sensor.0x158d0003262a35_contact','off')%}
  #           Washing
  #           {% elif is_state('binary_sensor.washer_b','off') and is_state('binary_sensor.0x158d0003262a35_contact','off')%}
  #           Drying
  #           {% elif is_state('binary_sensor.washer_b','off') and is_state('binary_sensor.0x158d0003262a35_contact','on')%}
  #           Idle
  #           {%endif%}

  washing_machine_state:
    alias: Washing Machine State
    sequence:
      - service: input_select.select_option
        data_template:
          entity_id: input_select.washer_state
          option: >
            {% if is_state('binary_sensor.washer_b','on') and is_state('binary_sensor.0x158d0003fa6cf5_contact','off')%}
            Washing
            {% elif is_state('binary_sensor.washer_b','off') and is_state('binary_sensor.0x158d0003fa6cf5_contact','off')%}
            Drying
            {% elif is_state('binary_sensor.washer_b','off') and is_state('binary_sensor.0x158d0003fa6cf5_contact','on')%}
            Idle
            {%endif%}

  toilet_air_freshener_counter_reset:
    alias: Toilet Air Freshsner Counter Reset
    sequence:
    - service: counter.reset
      entity_id: counter.air_freshener_toilet
    - service: input_text.set_value
      data_template:
        entity_id: input_text.air_freshener_toilet_tank_replacement
        value: "{{now().strftime('%d.%m.%Y %H:%M')}}"

  bathroom_fan_10m:
    alias: Bathroom fan 10m
    sequence:
    - service: switch.turn_on
      entity_id: switch.esp32_bathroom_node_relay_3
    - delay: '00:10:00'
    - service: switch.turn_off
      entity_id: switch.esp32_bathroom_node_relay_3