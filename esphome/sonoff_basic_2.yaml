substitutions:
  board_name: sonoff_basic_2

esphome:
  name: sonoff_basic_2
  platform: ESP8266
  board: esp01_1m
  # on_boot:
  #   then:
  #     - switch.turn_on: relay
  comment: Round LED K Switch
  
wifi:
  ssid: !secret wifi_ssid_k
  password: !secret wifi_pass
  domain: .local
  reboot_timeout: 15min
  #output_power: 17.5dB
  fast_connect: true
  #power_save_mode: none
  manual_ip:
    static_ip: 192.168.1.130
    gateway: 192.168.1.1
    subnet: 255.255.255.0
    dns1: 192.168.1.1
    dns2: 8.8.8.8

api:
  reboot_timeout: 0s

logger:

ota:

web_server:
  port: 80

# status_led:
#   pin:
#     number: GPIO13
#     inverted: yes

output:
  - platform: esp8266_pwm
    id: green_led
    pin: GPIO13
    inverted: True

light:
  - platform: binary
    name: ${board_name}_StatusLED
    internal: true
    output: green_led
    id: main_led

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: True
    name: ${board_name}_Button
    on_press:
      - switch.toggle: relay
      
  - platform: status
    name: ${board_name}_Status

climate:
  - platform: thermostat
    name: ${board_name}_Heater
    sensor: temperature_sensor
    default_target_temperature_low: 25 Â°C
    heat_action:
      - switch.turn_on: relay
    idle_action:
      - switch.turn_off: relay

switch:
  - platform: gpio
    name: ${board_name}_Relay
    pin: GPIO12
    id: relay
    on_turn_on:
      then:
        - light.turn_on: main_led
    on_turn_off:
      then:
        - light.turn_off: main_led

  - platform: restart
    name: ${board_name}_Restart

sensor:
  - platform: uptime
    name: ${board_name}_Uptime_s
    id: uptime_sensor

  - platform: wifi_signal
    name: ${board_name}_WiFi_RSSI
    update_interval: 60s

  - platform: dht
    pin: GPIO02
    temperature:
      name: ${board_name}_Temperature
      id: temperature_sensor
    humidity:
      name: ${board_name}_Humidity
    update_interval: 5s
    model: dht11
    
text_sensor:
  - platform: wifi_info
    ip_address:
      name: ${board_name}_IP
    ssid:
      name: ${board_name}_SSID
    bssid:
      name: ${board_name}_BSSID

  - platform: template
    name: ${board_name}_Uptime
    lambda: |-
        int seconds = round(id(uptime_sensor).raw_state);
        int days = seconds / (24 * 3600);
        seconds = seconds % (24 * 3600);
        int hours = seconds / 3600;
        seconds = seconds % 3600;
        int minutes = seconds /  60;
        seconds = seconds % 60;
        return (
          (days ? to_string(days) + "d " : "00d ") +
          (hours ? to_string(hours) + "h " : "00h ") +
          (minutes ? to_string(minutes) + "m " : "00m ") +
          (to_string(seconds) + "s")
        );
    icon: mdi:clock-start
    update_interval: 15s

time:
  - platform: homeassistant
    id: homeassistant_time