  - binary_sensor:
    
      - name: Lullaby
        state: "{{ (states.media_player | selectattr('state', 'eq', 'playing') | selectattr('attributes.media_title', 'defined') | selectattr('attributes.media_title', 'search', 'Колыбельная Брамс|Спят усталые', ignorecase=True) | map(attribute = 'name') | join(',') | count) > 0 }}"
        icon: mdi:bed
        delay_off:
          seconds: 15

      - name: Seat not closed
        state: "{{ is_state('binary_sensor.d1mini_distance_sensor_occupancy','off') and is_state('binary_sensor.0x158d000232ddd6_contact','on') }}"
        device_class: problem
        delay_on:
          seconds: 3
        delay_off:
          seconds: 3
          
      - name: Supervisor Is Healthy
        state: "{{ state_attr('sensor.supervisor_updates', 'healthy') }}"
        availability: "{{ state_attr('sensor.supervisor_updates', 'healthy') != 'unknown' }}"

      # - name: BLE Gateway
      #   icon: mdi:bluetooth
      #   state: "{{ is_state('input_boolean.settings_ble_gateway', 'on') }}"
      #   attributes:
      #     devices: "{{ states.sensor | selectattr('entity_id', 'search', '^sensor.ble_') | selectattr('attributes.mac_address', 'defined') | map(attribute='attributes.mac_address') | unique | sort | join('') | replace(':', '') ~ states.device_tracker | selectattr('entity_id', 'search', '^device_tracker.ble_') | selectattr('attributes.mac', 'defined') | map(attribute='attributes.mac') | unique | sort | join('') | replace(':', '') if is_state('binary_sensor.ble_gateway', 'on') }}"
      # - name: High Humidity B
      #   state: "{{ (states('sensor.0x158d00020d7c3a_humidity')|float(0) >= 80) or (states('sensor.e72e0120fcdc_humidity')|float(0) >= 80) }}"
      #   device_class: problem

      - name: BLE Gateway
        icon: mdi:bluetooth
        state: "{{ is_state('input_boolean.settings_ble_gateway', 'on') }}"
        attributes:
          discovery: "{{ is_state('input_boolean.settings_ble_gateway_discovery', 'on') }}"
          devices: "{{ states.sensor | selectattr('entity_id', 'search', '^sensor.ble_') | selectattr('attributes.mac_address', 'defined') | map(attribute='attributes.mac_address') | unique | sort | join('') | replace(':', '') ~ states.device_tracker | selectattr('entity_id', 'search', '^device_tracker.ble_') | selectattr('attributes.mac', 'defined') | map(attribute='attributes.mac') | unique | sort | join('') | replace(':', '') if is_state('binary_sensor.ble_gateway', 'on') }}"
      
      - name: High Humidity B
        device_class: moisture
        #state: "{{ states('sensor.humidity_average_b')|float(0) > states('sensor.humidity_average')|float(0) + 10 }}"
        state: "{{ states('sensor.humidity_average_b')|float(0) > 65 }}"
        delay_off:
          minutes: 5
        delay_on:
          minutes: 5

      # - name: Yandex Lite Speakers
      #   state: >
      #     {{not (is_state('media_player.yandex_hb','unavailable') and
      #     is_state('media_player.yandex_mb','unavailable') and
      #     is_state('media_player.yandex_k','unavailable') and
      #     is_state('media_player.yandex_s','unavailable') and
      #     is_state('media_player.yandex_v','unavailable')) }}
      #   device_class: connectivity
        
      # - name: Overvoltage
      #   state: "{{ states('sensor.shelly_em_channel_1_voltage')|float(0) > 253 }}"
      #   device_class: problem
        
      # - name: Undervoltage
      #   state: "{{ states('sensor.shelly_em_channel_1_voltage')|float(0) < 207 }}"
      #   device_class: problem

      # - name: Voltage State
      #   state: "{{ 207 > states('sensor.shelly_em_channel_1_voltage')|float(0) > 253 }}"
      #   device_class: problem
        
      - name: Central Heating
        state: "{{states('sensor.esp32_node_v_heating_pipe')|int(0) > 30 and states('sensor.esp32_node_mb_heating_pipe')|int(0) > 30 }}"
        device_class: heat
        delay_off:
          hours: 3
        # delay_on:
        #   hours: 3

      - name: Hot Water
        state: "{{ states('sensor.esp32_node_b_hot_pipe')|int(0) > 45 }}"
        device_class: heat

      - name: Cold Water
        state: "{{ states('sensor.esp32_node_b_cold_pipe')|int(0) <= states('sensor.0x158d0001e58754_temperature')|float(0) - 2 }}"
        device_class: cold

      # - name: Out Humidity Change 15m
      #   state: "{{(state_attr('sensor.out_humidity_stats','change')|float(0)) > 5}}"
      #   device_class: moisture
        
      - name: Light Outside Mi
        state: "{{[states('sensor.0x4cf8cdf3c7754a8_illuminance')|int(-1),states('sensor.0x4cf8cdf3c77271d_illuminance')|int(-1),states('sensor.0x4cf8cdf3c78d26e_illuminance')|int(-1)]|max > states('input_number.outside_light_level')|int(250)}}"
        icon: >
          {% if is_state('binary_sensor.light_outside_mi','on') %}
          mdi:brightness-5
          {% else %}
          mdi:brightness-4
          {% endif %}

      - name: Dark Outside Mi
        state: "{{[states('sensor.0x4cf8cdf3c7754a8_illuminance')|int(-1),states('sensor.0x4cf8cdf3c77271d_illuminance')|int(-1),states('sensor.0x4cf8cdf3c78d26e_illuminance')|int(-1)]|max < states('input_number.outside_light_level')|int(250)}}"
        icon: >
          {% if is_state('binary_sensor.dark_outside_mi','on') %}
          mdi:brightness-4
          {% else %}
          mdi:brightness-5
          {% endif %}

      - name: Bed Led Enable
        state: "{{ states('sensor.0x4cf8cdf3c772824_illuminance')|int(0) <= states('input_number.inside_light_level')|int(5) and is_state('input_boolean.security_mode','off') }}"
        icon: mdi:bed-king
        delay_off:
          minutes: 1
        delay_on:
          minutes: 1

          # {{
          # (is_state('binary_sensor.light_outside_mi','off') and 
          # is_state('input_boolean.security_mode','off') and 
          # 23>=now().hour>=7 and
          # (is_state('light.square_led_v','off') or 
          # (is_state('light.square_led_v','on') and state_attr('light.square_led_v','brightness')|int<100))) }}

      # - name: Bed Led Enable
      #   state: "{{ is_state('binary_sensor.light_outside_mi','off') and is_state('light.square_led_v','off') and not is_state('light.square_led_v','on')}}"
      #   icon: >
      #     {% if is_state('binary_sensor.bed_led_enable','on') %}
      #     mdi:brightness-5
      #     {% else %}
      #     mdi:brightness-4
      #     {% endif %}

      - name: RO Pump Status
        icon: mdi:water-pump
        state: "{{ is_state('binary_sensor.0x158d000423f316_contact','off') }}"

#{{states('proximity.dima_home')|int(0) < 500 and states('proximity.sandra_home')|int(0) < 500 and states('proximity.vova_home')|int(0) < 500 }}

      # - name: Bad AirQ Toilet
      #   icon: mdi:smoking-off
      #   state: "{{ states('sensor.bad_airq_toilet') | float(0) < -10 }}"

      - name: Toilet Usage
        icon: mdi:toilet
        state: "{{ is_state('binary_sensor.0x158d000232ddd6_contact','on') or is_state('sensor.d1mini_distance_sensor_occupancy_text','Sitting') }}"
        device_class: occupancy

      - name: Monitor Dell
        icon: mdi:monitor
        state: "{{ states('sensor.0x158d0003600ea4_power')|float(0) > 5 }}"

      - name: TV V
        icon: mdi:television
        state: "{{ is_state('binary_sensor.0x158d000236fdc9_contact','on') }}"

      - name: Mi Box V
        icon: mdi:play-network
        state: "{{ is_state_attr('device_tracker.mi_box_v','vlan',0)}}"

      - name: TV K
        icon: mdi:television-box
        state: "{{ is_state('binary_sensor.0x158d0002a1a47a_contact','on') }}"

      - name: Mi Stick K
        icon: mdi:youtube-tv
        state: "{{ is_state_attr('device_tracker.mi_stick_k','vlan',0)}}"

      - name: Breather V
        icon: mdi:power
        state: "{{ states('sensor.0x158d000344998e_power')|float(0) > 5 }}"

      - name: Breather S
        icon: mdi:power
        state: "{{ states('sensor.0x158d00036148b9_power')|float(0) > 5 }}"

      - name: Breather MB
        icon: mdi:power
        state: "{{ states('sensor.0x158d000345119e_power')|float(0) > 5 }}"

      - name: Washer B
        delay_off:
          minutes: 2
        state: "{{ states('sensor.sonoff_pow_r2_1_power')|float(0) > 5 }}"
        icon: >
          {% if states('sensor.sonoff_pow_r2_1_power')|float(0) == 0 %}
            mdi:washing-machine-off
          {% elif (states('sensor.sonoff_pow_r2_1_power')|float(0) > 0 and states('sensor.sonoff_pow_r2_1_power')|float(0) <= 0 ) %}
            mdi:washing-machine-alert
          {% else %}
            mdi:washing-machine
          {% endif %}

      # - name: Main Light HB
      #   state: "{{ is_state('switch.0x158d000223921b_channel_1','on') or is_state('switch.0x158d000253f04a_channel_2','on') }}"
      #   icon: mdi:lightbulb-group

      # - name: Light T
      #   state: "{{ is_state('switch.0x158d000223921b_channel_1','on') or is_state('switch.0x158d000253f04a_channel_2','on') }}"
      #   icon: mdi:lightbulb-group

      # - name: Light HB
      #   state: "{{ is_state('switch.0x158d000223921b_channel_1','on') or is_state('switch.0x158d000253f04a_channel_2','on') or is_state('light.led_strip_hb','on') or is_state('light.led_strip_entrance_hb','on') }}"
      #   icon: mdi:lightbulb-group

      # - name: Light B
      #   state: "{{ is_state('light.mirror_light_b','on') or is_state('switch.0x158d0002a36433_channel_2','on') }}"
      #   icon: mdi:lightbulb-group

      # - name: Light K
      #   state: "{{ is_state('light.round_led_k','on') or is_state('switch.d1mini_light_l_relay','on') or is_state('switch.sonoff_mini_4_relay','on') or is_state('switch.esp8266_hood_k_light','on') or is_state('light.esp32_node_k_light','on') }}"
      #   icon: mdi:lightbulb-group

      - name: Fridge HB
        icon: mdi:fridge
        state: "{{ states('sensor.0x158d0003539447_power')|float(0) > 5 }}"
      
      - name: Kettle K
        state: "{{ states('sensor.0x158d00028c9875_power')|float(0) > 50 }}"
        icon: >
          {% if states('sensor.0x158d00028c9875_power')|float(0) > 500 %}
          mdi:kettle-steam
          {% elif states('sensor.0x158d00028c9875_power')|float(0) < 50 %}
          mdi:kettle-off
          {% else %}
          mdi:kettle-outline
          {% endif %}

      - name: Kettle Boil K
        icon: mdi:kettle-steam
        state: "{{ states('sensor.0x158d00028c9875_power')|float(0) > 500 }}"
        delay_off:
          minutes: 1

      - name: Microwave K
        icon: mdi:microwave
        state: "{{ states('sensor.0x158d00028a54e4_power')|float(0) > 10 }}"

      - name: Ippon 1200 Status
        state: "{{ states('sensor.ippon_1200_status_data') not in ['none','unknown','unavailable'] }}"
        icon: mdi:battery
        device_class: power
      
      - name: Ippon 1050 Status
        state: "{{ states('sensor.ippon_1050_status_data') not in ['none','unknown','unavailable'] }}"
        icon: mdi:battery
        device_class: power

      - name: Cyber 650 Status
        state: "{{ states('sensor.cyber_650_status_data') not in ['none','unknown','unavailable'] }}"
        icon: mdi:battery
        device_class: power

      - name: Ippon 650 Status
        state: "{{ states('sensor.ippon_650_status_data') not in ['none','unknown','unavailable'] }}"
        icon: mdi:battery
        device_class: power

      - name: Chair 2 S
        state: "{{ is_state('sensor.0x158d0002a8ac3c_action','vibration') or is_state('sensor.0x158d0002a8ac3c_action','tilt') }}"
        delay_off:
          minutes: 20
        icon: mdi:chair-rolling

      - name: Ice Alarm Current
        device_class: cold
        state: "{{ 1 > state_attr('weather.my_weather','temperature')|float(0) > -3}}"

      - name: Ice Alarm 0d
        device_class: cold
        state: "{{ 1 > states('sensor.dark_sky_daytime_high_temperature_0d')|float(0) > -3}}"

      - name: Ice Alarm 1d
        device_class: cold
        state: "{{ 1 > states('sensor.dark_sky_daytime_high_temperature_1d')|float(0) > -3}}"

      # - name: Bright Light Allowed
      #   #state: "{{ (is_state('binary_sensor.workday_sensor','on') and is_state('binary_sensor.tod_day','on')) or (is_state('binary_sensor.workday_sensor','off') and is_state('binary_sensor.tod_day_non_working','on')) }}"
      #   state: "{{ is_state('binary_sensor.tod_day','on') }}"
      #   icon: >
      #     {% if is_state('binary_sensor.bright_light_allowed','on') %}
      #     mdi:brightness-5
      #     {% else %}
      #     mdi:brightness-4
      #     {% endif %}

      # - name: Noise Allowed
      #   state: >
      #     {% set hour = now().hour %}
      #     {{ states('binary_sensor.workday_sensor') == 'on' and ( ( hour >= 9 and hour < 13 ) or ( hour >= 15 and hour < 19) ) }}
      #   icon: >
      #     {% if is_state('binary_sensor.noise_allowed','on') %}
      #     mdi:volume-high
      #     {% else %}
      #     mdi:volume-off
      #     {% endif %}

      # - name: Round LED K Prev
      #   state: >-
      #     {% set ignore = ['unknown', 'unavailable', 'none','0'] %}
      #     {{is_state('light.round_led_k','on') if states('light.round_led_k') not in ignore else is_state('binary_sensor.round_led_k_prev','on') }}

      # - name: Round LED MB Prev
      #   state: >-
      #     {% set ignore = ['unknown', 'unavailable', 'none','0'] %}
      #     {{is_state('light.round_led_mb','on') if states('light.round_led_mb') not in ignore else is_state('binary_sensor.round_led_mb_prev','on') }}

      # - name: Round LED HS Prev
      #   state: >-
      #     {% set ignore = ['unknown', 'unavailable', 'none','0'] %}
      #     {{is_state('light.round_led_hs','on') if states('light.round_led_hs') not in ignore else is_state('binary_sensor.round_led_hs_prev','on') }}

      # - name: Square LED S Prev
      #   state: >-
      #     {% set ignore = ['unknown', 'unavailable', 'none','0'] %}
      #     {{is_state('light.square_led_s','on') if states('light.square_led_s') not in ignore else is_state('binary_sensor.square_led_s_prev','on') }}

      # - name: Square LED V Prev
      #   state: >-
      #     {% set ignore = ['unknown', 'unavailable', 'none','0'] %}
      #     {{is_state('light.square_led_v','on') if states('light.square_led_v') not in ignore else is_state('binary_sensor.square_led_v_prev','on') }}

      # - name: Purifier2S Prev
      #   state: >-
      #     {% set ignore = ['unknown', 'unavailable', 'none','0'] %}
      #     {{is_state('fan.purifier2s','on') if states('fan.purifier2s') not in ignore else is_state('binary_sensor.purifier2s_prev','on') }}


      # someone_showering:
      #   friendly_name: Someone is showering
      #   value_template: >
      #     {% set humidity = states('sensor.0x158d00020d7c3a_humidity') | float(0) %}
      #     {% set treshold = 1.05 * state_attr('sensor.humidity_bathroom_stats', "median") | float(0) %}
      #     {% set derivative = states('sensor.humidity_bathroom_derivative') | float(0) %}
      #     {{ humidity > treshold and derivative > 0.25 and is_state('binary_sensor.0x158d0002a14c5e_contact','off') }}
      #   device_class: occupancy

    

      # hot_water_24h:
      #   friendly_name: No Hot Water Sensor Update 24h
      #   value_template: "{{ states('sensor.time') and as_timestamp(now())- as_timestamp(states.binary_sensor['0x158d000232de79_contact'].last_changed) > 24*60*60 }}"
      #   device_class: moving

      # cold_water_24h:
      #   friendly_name: No Cold Water Sensor Update 24h
      #   value_template: "{{ states('sensor.time') and as_timestamp(now())- as_timestamp(states.binary_sensor['0x158d000236fcd5_contact'].last_changed) > 24*60*60 }}"
      #   device_class: moving

      # gw3_devices_unavailability:
      #   friendly_name: GW3 Devices Unvailability Flag
      #   value_template: "{{ expand('group.gw3_devices') | selectattr('state','in',['unavailable','unknown']) | map(attribute='name') | list | count > 0}}"
      #   device_class: problem          

  # - platform: template
  #   sensors:

      # sandra_home:
      #   friendly_name: Sandra home
      #   value_template: "{{is_state('person.sandra','home')}}"
      #   delay_off: 120

      # - name: Main Switch K Button
      #   state: "{{ states('sensor.0x158d0002a36f7f_action') in ['button_2_single','button_2_double'] }}"

      # - name: Main Switch MB Button
      #   state: "{{ states('sensor.0x158d00013e6aa5_action') in ['button_2_single','button_2_double','button_1_single','button_1_double'] }}"

      # - name: Main Switch V Button
      #   state: "{{ states('sensor.0x158d0001712d55_action') in ['button_2_single','button_2_double','button_1_single','button_1_double'] }}"

      # - name: Main Switch S Button
      #   state: "{{ states('sensor.0x158d00026eb820_action') in ['button_2_single','button_2_double','button_1_single','button_1_double'] }}"

      # - name: Main Switch HS Button
      #   state: "{{ states('sensor.0x158d0002a36433_action') in ['button_1_single','button_1_double'] }}"


  - trigger:
      - platform: state
        entity_id: light.round_led_k
        to: 'on'
        from: 'off'
        for:
          seconds: 3
      - platform: state
        entity_id: light.round_led_k
        to: 'off'
        from: 'on'
        for:
          seconds: 3
      - platform: event
        event_type: automation_reloaded
      - platform: event
        event_type: event_template_reloaded        
      - platform: numeric_state
        entity_id: sensor.ha_uptime
        above: 1        
    binary_sensor:
      - name: Round LED K Prev
        state: >-
          {% set ignore = ['unknown', 'unavailable', 'none','0'] %}
          {{ states('light.round_led_k') if states('light.round_led_k') not in ignore else states('binary_sensor.round_led_k_prev') }}

  - trigger:
      - platform: state
        entity_id: light.round_led_hs
        to: 'on'
        from: 'off'
        for:
          seconds: 3
      - platform: state
        entity_id: light.round_led_hs
        to: 'off'
        from: 'on'
        for:
          seconds: 3
      - platform: event
        event_type: automation_reloaded
      - platform: event
        event_type: event_template_reloaded        
      - platform: numeric_state
        entity_id: sensor.ha_uptime
        above: 1
    binary_sensor:
      - name: Round LED HS Prev
        state: >-
          {% set ignore = ['unknown', 'unavailable', 'none','0'] %}
          {{ states('light.round_led_hs') if states('light.round_led_hs') not in ignore else states('binary_sensor.round_led_hs_prev') }}

  - trigger:
      - platform: state
        entity_id: light.round_led_mb
        to: 'on'
        from: 'off'
        for:
          seconds: 3
      - platform: state
        entity_id: light.round_led_mb
        to: 'off'
        from: 'on'
        for:
          seconds: 3
      - platform: event
        event_type: automation_reloaded
      - platform: event
        event_type: event_template_reloaded        
      - platform: numeric_state
        entity_id: sensor.ha_uptime
        above: 1        
    binary_sensor:
      - name: Round LED MB Prev
        state: >-
          {% set ignore = ['unknown', 'unavailable', 'none','0'] %}
          {{ states('light.round_led_mb') if states('light.round_led_mb') not in ignore else states('binary_sensor.round_led_mb_prev') }}

  - trigger:
      - platform: state
        entity_id: light.square_led_s
        to: 'on'
        from: 'off'
        for:
          seconds: 3
      - platform: state
        entity_id: light.square_led_s
        to: 'off'
        from: 'on'
        for:
          seconds: 3
      - platform: event
        event_type: automation_reloaded
      - platform: event
        event_type: event_template_reloaded        
      - platform: numeric_state
        entity_id: sensor.ha_uptime
        above: 1        
    binary_sensor:
      - name: Square LED S Prev
        state: >-
          {% set ignore = ['unknown', 'unavailable', 'none','0'] %}
          {{ states('light.square_led_s') if states('light.square_led_s') not in ignore else states('binary_sensor.square_led_s_prev') }}

  - trigger:
      - platform: state
        entity_id: light.square_led_v
        to: 'on'
        from: 'off'
        for:
          seconds: 3
      - platform: state
        entity_id: light.square_led_v
        to: 'off'
        from: 'on'
        for:
          seconds: 3
      - platform: event
        event_type: automation_reloaded
      - platform: event
        event_type: event_template_reloaded        
      - platform: numeric_state
        entity_id: sensor.ha_uptime
        above: 1        
    binary_sensor:
      - name: Square LED V Prev
        state: >-
          {% set ignore = ['unknown', 'unavailable', 'none','0'] %}
          {{ states('light.square_led_v') if states('light.square_led_v') not in ignore else states('binary_sensor.square_led_v_prev') }}
          
  - trigger:
      - platform: webhook
        webhook_id: "pinhole_connected"
        id: "true"
      - platform: webhook
        webhook_id: "pinhole_disconnected"
        id: "false"
    binary_sensor:
      - name: Pinhole State
        state: "{{ trigger.id }}"
        device_class: connectivity

  - trigger:
      - platform: event
        event_type: event_template_reloaded
    binary_sensor:
      - name: Templates reload
        state: "{{ true }}"
        device_class: problem
        auto_off:
          seconds: 10