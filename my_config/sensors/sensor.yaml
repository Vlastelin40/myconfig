  # - platform: imap_email_content
  #   server: imap.gmail.com
  #   name: DoorCam Motion Sensor
  #   port: 993
  #   username: !secret gmail_username
  #   password: !secret gmail_password
  #   folder: DoorCam
  #   senders:
  #     - !secret doorcam_email
  # - platform: imap
  #   server: imap.gmail.com
  #   name: DoorCam Email Unread
  #   port: 993
  #   username: !secret gmail_username
  #   password: !secret gmail_password
  #   folder: DoorCam
  #   search: !secret search_from_cam

  # - platform: yandex_transport
  #   name: Bus To Home
  #   stop_id: 9639688
  #   routes:
  #     - 22
  #     - 595

#  - platform: authenticated

  # - platform: sql
  #   queries:
  #     - name: Temp Out Yesterday
  #       query: >
  #           SELECT
  #               state
  #           FROM
  #               states
  #           WHERE
  #               entity_id = 'sensor.0x158d0001e8995a_temperature'
  #               and state <> 'unavailable'
  #               and created < DATETIME('NOW','-1 DAY')
  #           ORDER BY state_id DESC
  #           LIMIT 1;
  #       column: 'state'
  #       unit_of_measurement: '°C'
  #   scan_interval: 60

  # - platform: seventeentrack
  #   username: !secret 17track_user
  #   password: !secret 17track_pass

  - platform: command_line
    name: Start Time
    command: 'cat /config/home-assistant.log | grep -o "initialized[[:space:]]in[[:space:]][0-9]\+.[0-9]\+" | grep -o "[0-9]\+.[0-9]\+$" || echo -1'
    scan_interval: 3000
    unit_of_measurement: "s"

  - platform: mqtt
    state_topic: esp01_air_freshener/sprays_count
    name: Air Freshener Counter
    unit_of_measurement: "ea"
    value_template: "{{ value | int }}"
    icon: mdi:counter

  - platform: mqtt
    state_topic: esp01_air_freshener/last_hearbeat
    name: Air Freshener Last Heartbeat
    value_template: "{{ value }}"
    icon: mdi:clock

  - platform: mqtt
    state_topic: esp01_air_freshener/last_spray
    name: Air Freshener Last Spray
    value_template: "{{ value }}"
    icon: mdi:clock
    
  - platform: mqtt
    state_topic: esp01_air_freshener/tank_replace
    name: Air Freshener Tank Replace
    value_template: "{{ value }}"
    icon: mdi:clock

# | timestamp_custom('%d.%m.%Y %H:%M:%S')
    
  - platform: modem_callerid
    device: /dev/serial/by-id/usb-U.S.Robotics_USB_Modem_0000003-if00
  
  # - platform: opensky
  #   radius: 3
  #   name: opensky_home
    
  # - platform: opensky
  #   radius: 5
  #   name: opensky_dacha
  #   latitude: !secret dacha_latitude
  #   longitude: !secret dacha_longitude

  # - platform: filter
  #   name: Radiation Dose Filtered 1m
  #   entity_id: sensor.geiger_radiation_dose_per_hour
  #   filters:
  #     - filter: time_simple_moving_average
  #       window_size: "00:01"

  # - platform: filter
  #   name: Radiation Dose Filtered 5m
  #   entity_id: sensor.geiger_radiation_dose_per_hour
  #   filters:
  #     - filter: time_simple_moving_average
  #       window_size: "00:05"

  # - platform: mold_indicator
  #   name: mold_t
  #   indoor_temp_sensor: sensor.sonoff_pow_r2_2_temperature
  #   indoor_humidity_sensor: sensor.sonoff_pow_r2_2_humidity
  #   outdoor_temp_sensor: sensor.esp32_node_mb_outside
  #   calibration_factor: 2.227848101
    
  # - platform: mold_indicator
  #   name: mold_pipe_t
  #   indoor_temp_sensor: sensor.esp32_bathroom_node_cold_pipe
  #   indoor_humidity_sensor: sensor.0x158d0001e58754_humidity
  #   outdoor_temp_sensor: sensor.esp32_node_mb_outside
  #   calibration_factor: 2.554146341

  # - platform: statistics
  #   name: Humidity bathroom stats
  #   entity_id: sensor.0x158d00020d7c3a_humidity
  #   sampling_size: 86400
  #   max_age: 
  #     hours: 24
  
  # - platform: derivative
  #   source: sensor.0x158d00020d7c3a_humidity
  #   name: Humidity bathroom derivative
  #   unit_time: min
  #   time_window: "00:10:00"

  # - platform: statistics
  #   name: Oven Temp Stats
  #   entity_id: sensor.esp8266_oven_temp_k
  #   sampling_size: 30
  #   max_age:
  #     minutes: 5

  # - platform: template
  #   sensors:
  #     oven_temp_change:
  #       value_template: "{{ state_attr('sensor.oven_temp_stats', 'change') }}"
  #       unit_of_measurement: '°C'
  #       device_class: temperature

  # - platform: derivative
  #   source: sensor.oven_temp_stats
  #   name: Temperature Oven derivative
  #   unit_time: min
  #   time_window: "00:05:00"


  - platform: statistics
    name: out_humidity_stats
    entity_id: sensor.0x158d000239ad5b_humidity
    sampling_size: 900
    max_age:
      minutes: 15

  - platform: statistics
    name: out_temperature_stats
    entity_id: sensor.esp32_node_mb_outside #sensor.0x158d0001e8995a_temperature
    sampling_size: 6000
    max_age:
      hours: 24

  - platform: statistics
    name: stove_temperature_stats
    entity_id: sensor.esp32_hood_k_hood_tcouple
    sampling_size: 1000
    max_age:
      hours: 6
  
  - platform: min_max
    type: mean
    name: Humidity Average
    round_digits: 2
    entity_ids:
      - sensor.0x158d0001e586af_humidity
      - sensor.0x158d0001e58714_humidity
      - sensor.0x158d0001e6d85a_humidity
      - sensor.0x158d000222c746_humidity
      - sensor.0x158d000233fb72_humidity
      - sensor.0x158d0002464ec0_humidity

  - platform: min_max
    type: mean
    name: Temperature Average
    round_digits: 2
    entity_ids:
      - sensor.0x158d0001e586af_temperature
      - sensor.0x158d0001e58714_temperature
      - sensor.0x158d0001e6d85a_temperature
      - sensor.0x158d000222c746_temperature
      - sensor.0x158d000233fb72_temperature
      - sensor.0x158d0002464ec0_temperature

  - platform: min_max
    type: mean
    name: Pressure Average
    round_digits: 2
    entity_ids:
      - sensor.0x158d000233fb72_pressure
      - sensor.sonoff_basic_1_bme280_pressure
      - sensor.0x158d000237167c_pressure
      - sensor.esp32_hood_k_bme280_pressure
      - sensor.esp32_node_k_pressure
      - sensor.esp32_node_mb_pressure
      - sensor.esp32_node_v_pressure
      - sensor.sonoff_pow_r2_2_pressure    

  - platform: command_line
    name: Supervisor updates
    command: 'curl -s http://supervisor/supervisor/info -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" | jq ''{"newest_version":.data.version_latest,"current_version":.data.version,"addons":[.data.addons[] | select(.version != .version_latest)]}'''
    value_template: "{{ value_json.addons | length }}"
    json_attributes:
      - newest_version
      - current_version
      - addons

  - platform: rest
    resource: https://www.cbr-xml-daily.ru/daily_json.js
    name: USD_RUR
    value_template: '{{ value_json.Valute.USD.Value | float | round(2) }}'
    unit_of_measurement: 'RUR'
    scan_interval: 1200

  - platform: rest
    resource: https://www.cbr-xml-daily.ru/daily_json.js
    name: EUR_RUR
    value_template: '{{ value_json.Valute.EUR.Value | float | round(2) }}'
    unit_of_measurement: 'RUR'
    scan_interval: 1200


  # - platform: command_line
  #   name: config_line_count_sh
  #   command: 'bash /config/line_count.sh'
  #   unit_of_measurement: 'lines'
  #   scan_interval: 1800

  # - platform: command_line
  #   name: config_line_count_sh_code
  #   unit_of_measurement: 'lines'
  #   command: 'bash /config/line_count_code.sh'
  #   scan_interval: 1800

  - platform: mqtt
    name: Config Line Count
    state_topic: "ubuntu/config_linecount"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value }}"
    unit_of_measurement: 'lines'
    icon: mdi:format-list-bulleted

  - platform: mqtt
    name: Config Line Count Code
    state_topic: "ubuntu/config_linecount_code"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value }}"
    unit_of_measurement: 'lines'
    icon: mdi:format-list-numbered

#  - platform: command_line
#    name: ya_weather_city
#    command: 'bash /config/ya_weather.sh'
#    scan_interval: 120
    
#  - platform: command_line
#    name: ya_weather_work
#    command: 'bash /config/ya_weather_work.sh'
#    scan_interval: 120

#  - platform: command_line
#    name: ya_weather_home
#    command: 'bash /config/ya_weather_home.sh'
#    scan_interval: 120

  - platform: github
    access_token: !secret github_access_token
    repositories:
      - path: 'to4ko/myconfig'
        name: myconfig

  - platform: statistics
    entity_id: sensor.pressure_average
    name: pressure
    max_age:
      minutes: 10
      
  - platform: statistics
    entity_id: sensor.pressure_average
    name: pressure_stats_3h
    max_age:
      hours: 3
    sampling_size: 10800

  - platform: statistics
    entity_id: sensor.pressure_average
    name: pressure_stats_6h
    max_age:
      hours: 6
    sampling_size: 21600

  # Barometric forecast
  # Pressure Changes 3 Hour
  # mmHg  * 1.33322 = hPa = mbar
  # - platform: rest
  #   resource: !secret influx_pressure_changes
  #   name: pressure_change_in_3_hours
  #   device_class: pressure
  #   unit_of_measurement: "hPa"
  #   value_template: '{{ value_json["results"][0]["series"][0]["values"][0][1] }}'
  #   headers:
  #     User-Agent: Home Assistant
      
  - platform: season
    type: astronomical

# ############################################################################
# External IP sensor
# ############################################################################
#  - platform: rest
#    resource: http://ip.jsontest.com
#    name: External IP
#    value_template: '{{ value_json.ip }}'

  - platform: moon

# ############################################################################
# Time\date sensor
# ############################################################################
  - platform: time_date
    display_options:
      - 'time'
      - 'date'
      - 'date_time'

  # - platform: template
  #   sensors:
  #     current_year:
  #       value_template: "{{states('sensor.date').split('-')[0]}}"
  #       unit_of_measurement: ''
  #     current_month:
  #       value_template: "{{states('sensor.date').split('-')[1]}}"
  #       unit_of_measurement: ''
  #     current_day:
  #       value_template: "{{states('sensor.date').split('-')[2]}}"
  #       unit_of_measurement: ''
  #     current_hour:
  #       value_template: "{{states('sensor.time').split(':')[0]}}"
  #       unit_of_measurement: ''
  #     current_minute:
  #       value_template: "{{states('sensor.time').split(':')[1]}}"
  #       unit_of_measurement: ''
        
# ############################################################################
# Xiaomi GW3 Sensors
# ############################################################################
  # - platform: template
  #   sensors:
  #     gw3_hb_radio_tx_power:
  #       value_template: "{{state_attr('sensor.0x588e81fffedcb38d_gateway','radio_tx_power')|int}}"
  #       icon_template: mdi:signal-cellular-2
  #       friendly_name: Gateway3 HB Radio TX Power
  #       unit_of_measurement: ''
  #     gw3_hb_radio_channel:
  #       value_template: "{{state_attr('sensor.0x588e81fffedcb38d_gateway','radio_channel')|int}}"
  #       icon_template: mdi:radio-tower
  #       friendly_name: Gateway3 HB Radio Channel
  #       unit_of_measurement: ''
        
  #     gw3_hs_radio_tx_power:
  #       value_template: "{{state_attr('sensor.0x842e14fffe1508a6_gateway','radio_tx_power')|int}}"
  #       icon_template: mdi:signal-cellular-2
  #       friendly_name: Gateway3 HS Radio TX Power
  #       unit_of_measurement: ''
  #     gw3_hs_radio_channel:
  #       value_template: "{{state_attr('sensor.0x842e14fffe1508a6_gateway','radio_channel')|int}}"
  #       icon_template: mdi:radio-tower
  #       friendly_name: Gateway3 HS Radio Channel
  #       unit_of_measurement: ''

  #     # gw3_hs_free_mem:
  #     #   value_template: "{{state_attr('sensor.0x842e14fffe1508a6_gateway','free_mem')|int}}"
  #     #   icon_template: mdi:chip
  #     #   friendly_name: Gateway3 HS Free Memory
  #     #   unit_of_measurement: 'kB'


  #     gw3_s_radio_tx_power:
  #       value_template: "{{state_attr('sensor.0x588e81fffedd3c41_gateway','radio_tx_power')|int}}"
  #       icon_template: mdi:signal-cellular-2
  #       friendly_name: Gateway3 S Radio TX Power
  #       unit_of_measurement: ''
  #     gw3_s_radio_channel:
  #       value_template: "{{state_attr('sensor.0x588e81fffedd3c41_gateway','radio_channel')|int}}"
  #       icon_template: mdi:radio-tower
  #       friendly_name: Gateway3 S Radio Channel
  #       unit_of_measurement: ''
        
  #     gw3_k_radio_tx_power:
  #       value_template: "{{state_attr('sensor.0x588e81fffe72678e_gateway','radio_tx_power')|int}}"
  #       icon_template: mdi:signal-cellular-2
  #       friendly_name: Gateway3 K Radio TX Power
  #       unit_of_measurement: ''
  #     gw3_k_radio_channel:
  #       value_template: "{{state_attr('sensor.0x588e81fffe72678e_gateway','radio_channel')|int}}"
  #       icon_template: mdi:radio-tower
  #       friendly_name: Gateway3 K Radio Channel
  #       unit_of_measurement: ''

  - platform: mqtt
    name: Mi Kettle Temperature
    state_topic: "r4s/b87c6f84aec1/rsp/temp"
    device_class: temperature
    unit_of_measurement: "°C"

  - platform: mqtt
    name: Mi Kettle State
    state_topic: "r4s/b87c6f84aec1/rsp/state"
    json_attributes_topic: "r4s/b87c6f84aec1/rsp/json"
    payload_not_available: "OFFLINE"
    icon: mdi:kettle
    
  - platform: mqtt
    name: Mi Kettle RSSI
    state_topic: "r4s/b87c6f84aec1/rssi"
    icon: mdi:rss

#{{states|selectattr('attributes.device_class', 'eq','battery')|selectattr('attributes.unit_of_measurement','eq','%')|selectattr('state','<','20')|map(attribute='attributes.friendly_name') | unique | sort | list  | join('\n')}}

      # battery_devices_list:
      #   friendly_name: Battery Devices List
      #   value_template: >
      #     {%-for state in states.sensor
      #     if  state.entity_id.endswith("_battery")%}
      #     {{ state.name}}: {{state.state}}%%{%- if not loop.last %};{%endif%}
      #     {%-endfor%}



      # battery_levels:
      #   friendly_name: Battery Levels
      #   value_template: >
      #     {%- set threshold = 50 -%}
      #     {% set domains = ['sensor'] %}
      #     {% for domain in domains -%}
      #     {% for item in states[domain] if ( ("_battery" in item.entity_id and "0x" in item.entity_id and item.state| int < threshold) )-%}
      #     {% if (item.state | int < threshold) -%}

      #         {{ item.name }}: {{ item.state }}%{%- if not loop.last %};
      #     {% endif -%}{% endif -%}

      #     {% endfor %}
      #     {%- endfor %}

      # battery_levels_2:
      #   friendly_name: Battery Levels2
      #   value_template: >
      #     {%- macro LowBattery() -%}
      #     {% for item in states.sensor -%}
      #     {%- if "_battery" in item.entity_id and "0x" in item.entity_id and (item.state|int < 50 ) -%}
      #     X 
      #     {%- endif -%}
      #     {%- endfor %}
      #     {%- endmacro -%}
      #     {%- if LowBattery()[0] == "X" -%}
      #     {{LowBattery()|list|length }}
      #     {%- else -%}
      #     0
      #     {%- endif -%} 
      #   attribute_templates:
      #     devices: >-
      #       {% for item in states.sensor-%}
      #       {%- if "_battery" in item.entity_id and "0x" in item.entity_id and (item.state|int < 50 ) %}
      #       {{item.entity_id}}: {{ item.state }}%{% if not loop.last %}; {%- endif %}
      #       {%- endif -%}
      #       {%- endfor %}
            
  - platform: scrape
    name: Magnetic Storm
    resource: https://tesis.lebedev.ru/magnetic_storms.html
    select: table.main td p:nth-of-type(4) > b
    unit_of_measurement: ' '
    value_template: "{{ value.split('(')[0] | int }}"
    scan_interval: 300

  - platform: waqi
    token: !secret aqicn_api_key
    scan_interval: 900
    locations:
      - Ostankino, Moscow