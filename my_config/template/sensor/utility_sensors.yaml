  - sensor:
      - name: Thermo Pad Daily Cost
        state: "{{(states('input_number.tariff_energy_day')|float(0)*16*states('sensor.thermo_pad_hourly_power_consumption')|float(0)/1000+states('input_number.tariff_energy_night')|float(0)*8*states('sensor.thermo_pad_hourly_power_consumption')|float(0)/1000)|round(2, 'common')}}"
        unit_of_measurement: "rub"
        icon: mdi:currency-rub
      - name: Thermo Pad Monthly Cost
        state: "{{(states('sensor.thermo_pad_daily_cost')|float(0)*30)|round(0, 'common') }}"
        unit_of_measurement: "rub"
        icon: mdi:currency-rub

      - name: Server Daily Cost
        state: "{{(states('input_number.tariff_energy_day')|float(0)*16*states('sensor.server_daily_power_consumption')|float(0)/1000+states('input_number.tariff_energy_night')|float(0)*8*states('sensor.server_daily_power_consumption')|float(0)/1000)|round(2, 'common')}}"
        unit_of_measurement: "rub"
        icon: mdi:currency-rub
      - name: Server Monthly Cost
        state: "{{(states('sensor.server_daily_cost')|float(0)*30)|round(0, 'common') }}"
        unit_of_measurement: "rub"
        icon: mdi:currency-rub

      - name: Ds1621plus Daily Cost
        state: "{{(states('input_number.tariff_energy_day')|float(0)*16*states('sensor.ds1621plus_daily_power_consumption')|float(0)/1000+states('input_number.tariff_energy_night')|float(0)*8*states('sensor.ds1621plus_daily_power_consumption')|float(0)/1000)|round(2, 'common')}}"
        unit_of_measurement: "rub"
        icon: mdi:currency-rub
      - name: Ds1621plus Monthly Cost
        state: "{{(states('sensor.ds1621plus_daily_cost')|float(0)*30)|round(0, 'common') }}"
        unit_of_measurement: "rub"
        icon: mdi:currency-rub
        
      - name: Ds220j Daily Cost
        state: "{{(states('input_number.tariff_energy_day')|float(0)*16*states('sensor.ds220j_daily_power_consumption')|float(0)/1000+states('input_number.tariff_energy_night')|float(0)*8*states('sensor.ds220j_daily_power_consumption')|float(0)/1000)|round(2, 'common')}}"
        unit_of_measurement: "rub"
        icon: mdi:currency-rub
      - name: Ds220j Monthly Cost
        state: "{{(states('sensor.ds220j_daily_cost')|float(0)*30)|round(0, 'common') }}"
        unit_of_measurement: "rub"
        icon: mdi:currency-rub

      - name: Ds918plus Daily Cost
        state: "{{(states('input_number.tariff_energy_day')|float(0)*16*states('sensor.ds918plus_daily_power_consumption')|float(0)/1000+states('input_number.tariff_energy_night')|float(0)*8*states('sensor.ds918plus_daily_power_consumption')|float(0)/1000)|round(2, 'common')}}"
        unit_of_measurement: "rub"
        icon: mdi:currency-rub
      - name: Ds918plus Monthly Cost
        state: "{{(states('sensor.ds918plus_daily_cost')|float(0)*30)|round(0, 'common') }}"
        unit_of_measurement: "rub"
        icon: mdi:currency-rub

      - name: Utility Cost
        unit_of_measurement: "rub"
        icon: mdi:currency-rub
        state: "{{ (states('sensor.power_cost')|float(0) + states('sensor.water_cost')|float(0))|round(0, 'common') }}"

      # ############################################################################
      # Power monitoring sensors
      # ############################################################################
      # power_consumption:
      #   value_template: "{{ states('sensor.power_consumption_k')|int(0) + states('sensor.power_consumption_t')|int(0) + states('sensor.power_consumption_b')|int(0) + states('sensor.power_consumption_hs')|int(0) + states('sensor.power_consumption_mb')|int(0) + states('sensor.power_consumption_st')|int(0) + states('sensor.power_consumption_hb')|int(0) +states('sensor.power_consumption_v')|int(0) + states('sensor.power_consumption_s')|int(0) }}"
      #   unit_of_measurement: W
      #   icon_template: mdi:flash
      #   friendly_name: 'Power/Current'

      - name: Power Consumption K
        state: "{{ ( ((states('light.round_led_k')|replace('on','1'))|int(0)*32*state_attr('light.round_led_k','brightness')|int(0)/255)|float(0) + states('sensor.0x158d0002451850_power')|float(0) + states('sensor.0x158d0002476ed1_power')|float(0) + states('sensor.0x158d000249b25b_power')|float(0) + states('sensor.0x158d0001e85086_power')|float(0) + states('sensor.0x158d000353a2e3_power')|float(0) ) |round(0, 'common')}}"
        unit_of_measurement: W
        icon: mdi:gauge

      - name: Power Consumption T
        state: "{{ ( ((states('switch.0x158d0002a36f7f_channel_1')|replace('on','1'))|int(0) * 10 )|float(0))|round(0, 'common') + states('sensor.sonoff_pow_r2_2_power')|float(0)|round(0, 'common') }}"
        unit_of_measurement: W
        icon: mdi:gauge

      - name: Power Consumption B
        state: "{{ ( (states('switch.0x158d0002a36433_channel_2')|replace('on','1'))|int(0)*20 +states('sensor.sonoff_pow_r2_1_power')|float(0) + 1 )|round(0, 'common') }}"
        unit_of_measurement: W
        icon: mdi:gauge

      - name: Power Consumption HS
        state: "{{ ( ((states('light.round_led_hs')|replace('on','1'))|int(0)*32*state_attr('light.round_led_hs','brightness')|int(0)/255) + states('sensor.0x158d000249b26b_power')|float(0) + states('sensor.0x158d0002924790_power')|float(0) ) | round(0, 'common') }}"
        unit_of_measurement: W
        icon: mdi:gauge

      - name: Power Consumption MB
        state: "{{ ( ((states('light.round_led_mb')|replace('on','1'))|int(0)*50*state_attr('light.round_led_mb','brightness')|int(0)/255)|float(0) + states('sensor.0x158d000322e30c_power')|float(0) + states('sensor.0x158d0002467773_power')|float(0) + states('sensor.0x158d000205a835_power')|float(0) + states('sensor.0x158d000224e3e4_power')|float(0) + 1 ) | round(0, 'common')}}"
        unit_of_measurement: W
        icon: mdi:gauge

      - name: Power Consumption V
        state: "{{ ( states('sensor.shelly_1pm_led_v_power')|float(0) + states('sensor.0x158d0002468fbd_power')|float(0) + states('sensor.0x158d0002395dc9_power')|float(0) + states('sensor.0x158d000246776f_power')|float(0) + 1 ) | round(0, 'common')}}"
        unit_of_measurement: W
        icon: mdi:gauge

      - name: Power Consumption S
        state: "{{ ( states('sensor.shelly_1pm_led_s_power')|float(0) + states('sensor.0x158d00035f44a7_power')|float(0)+ states('sensor.0x158d000239097a_power')|float(0) + states('sensor.0x158d0002395d58_power')|float(0) ) | round(0, 'common')}}"
        unit_of_measurement: W
        icon: mdi:gauge

      - name: Power Consumption St
        state: "{{ ( ((states('switch.0x158d000248bf53_switch')|replace('on','1'))|int(0)*16) + ((states('switch.sonoff_basic_1_relay')|replace('on','1'))|int(0)*16) ) | round(0, 'common')}}"
        unit_of_measurement: W
        icon: mdi:gauge

      - name: Power Consumption HB
        state: "{{ ( states('switch.0x158d000223921b_channel_1')|replace('on',1)|int(0)*32.5 + states('switch.0x158d000253f04a_channel_2')|replace('on',1)|int(0)*32.5 + states('sensor.0x158d00023e5812_power')|float(0) + states('sensor.0x158d0001f2630e_power')|float(0) + states('sensor.0x158d00024517fe_power')|float(0) + states('sensor.0x158d000230fc52_power')|float(0) + states('sensor.0x158d000358c773_power')|float(0) + 2 ) | round(0, 'common') }}"
        unit_of_measurement: W
        icon: mdi:gauge

      # total_current:
      #   icon_template: mdi:current-ac
      #   value_template: "{{ (((states('sensor.power_consumption')|float(0) / states('sensor.voltage')|float(0))|float(0)))|round(1, 'common') }}"
      #   unit_of_measurement: "A"
      #   friendly_name: "Total current"

      - name: Power Cost
        icon: mdi:currency-rub
        unit_of_measurement: "rub"
        state: "{{ (states('sensor.esp32_pzem_hb_energy_monthly_day')|float(0)*states('input_number.tariff_energy_day')|float(0) + states('sensor.esp32_pzem_hb_energy_monthly_night')|float(0)*states('input_number.tariff_energy_night')|float(0)) |round(2, 'common') }}"
      - name: Power T1 Cost
        icon: mdi:currency-rub
        unit_of_measurement: "rub"
        state: "{{ (states('sensor.esp32_pzem_hb_energy_monthly_day')|float(0)*states('input_number.tariff_energy_day')|float(0) ) |round(2, 'common') }}"
      - name: Power T2 Cost
        icon: mdi:currency-rub
        unit_of_measurement: "rub"
        state: "{{ (states('sensor.esp32_pzem_hb_energy_monthly_night')|float(0)*states('input_number.tariff_energy_night')|float(0)) |round(2, 'common') }}"

      # ############################################################################
      # Water monitoring sensors
      # ############################################################################
      - name: Cold water meter
        icon: mdi:counter
        unit_of_measurement: "m3"
        state: "{{ ((states('input_number.cold_water_meter'))|float(0)) | round(2, 'common') }}"

      - name: Hot water meter
        icon: mdi:counter
        unit_of_measurement: "m3"
        state: "{{ ((states('input_number.hot_water_meter'))|float(0)) | round(2, 'common') }}"

      - name: Cold water Month
        icon: mdi:counter
        unit_of_measurement: "m3"
        state: "{{ (((states('input_number.cold_water_meter_month'))|float(0)))|round(2, 'common') }}"

      - name: Hot water Month
        icon: mdi:counter
        unit_of_measurement: "m3"
        state: "{{ (((states('input_number.hot_water_meter_month'))|float(0)))|round(2, 'common') }}"

      - name: Cold water cost
        icon: mdi:currency-rub
        unit_of_measurement: "rub"
        state: "{{ (((states('input_number.cold_water_meter_month'))|float(0)) * states('input_number.tariff_cold_water')|float(0))|round(2, 'common') }}"

      - name: Hot water cost
        icon: mdi:currency-rub
        unit_of_measurement: "rub"
        state: "{{ (((states('input_number.hot_water_meter_month'))|float(0)) * states('input_number.tariff_hot_water')|float(0))|round(2, 'common') }}"

      - name: Water cost
        icon: mdi:currency-rub
        unit_of_measurement: "rub"
        state: >
          {{ (( (((states('input_number.cold_water_meter_month'))|float(0)))*states('input_number.tariff_cold_water')|float(0)) +
          (((states('input_number.hot_water_meter_month'))|float(0))*states('input_number.tariff_hot_water')|float(0)) )|round(2, 'common') }}
          
      - name: Water
        unit_of_measurement: "m3"
        state: >
          {{ (( (((states('input_number.cold_water_meter_month'))|float(0)))) +
          (((states('input_number.hot_water_meter_month'))|float(0))) )|round(2, 'common') }}