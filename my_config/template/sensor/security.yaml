  # - trigger:
  #     - platform: state
  #       entity_id:
  #         - binary_sensor.0x158d0001ae9f61_motion
  #         - binary_sensor.0x158d0001aea602_motion
  #         - binary_sensor.0x158d0003f27ce2_motion
  #         - binary_sensor.0x158d0001e05856_motion
  #         - binary_sensor.0x158d0001e53cda_motion
  #         - binary_sensor.0x158d0001e54280_motion
  #         - binary_sensor.0x158d000224f89f_motion
  #         - binary_sensor.0x158d000236bb94_motion
  #         - binary_sensor.0x158d000236bc6d_motion
  #         #- binary_sensor.0x158d00024e58e7_motion
  #         - binary_sensor.0x158d0002b4729d_motion
  #         - binary_sensor.0x158d0002b482e9_motion
  #         - binary_sensor.0x158d0002b48381_motion
  #         - binary_sensor.0x158d0003140824_motion
  #         - binary_sensor.0x158d0001d5995e_motion
  #         - binary_sensor.motion_g3_flex_entrance
  #         - binary_sensor.motion_g3_flex_hall
  #       to: 'on'
  #   sensor:
  #     - name: Last Motion
  #       state:  '{{ trigger.from_state.attributes.friendly_name }}'

  # - trigger:
  #     - platform: state
  #       entity_id:
  #         - binary_sensor.0x158d0001ae9f61_motion
  #         - binary_sensor.0x158d0001aea602_motion
  #         - binary_sensor.0x158d0003f27ce2_motion
  #         - binary_sensor.0x158d0001e05856_motion
  #         - binary_sensor.0x158d0001e53cda_motion
  #         - binary_sensor.0x158d0001e54280_motion
  #         - binary_sensor.0x158d000224f89f_motion
  #         - binary_sensor.0x158d000236bb94_motion
  #         - binary_sensor.0x158d000236bc6d_motion
  #         #- binary_sensor.0x158d00024e58e7_motion
  #         - binary_sensor.0x158d0002b4729d_motion
  #         - binary_sensor.0x158d0002b482e9_motion
  #         - binary_sensor.0x158d0002b48381_motion
  #         - binary_sensor.0x158d0003140824_motion
  #         - binary_sensor.0x158d0001d5995e_motion
  #         - binary_sensor.motion_g3_flex_entrance
  #         - binary_sensor.motion_g3_flex_hall
  #         - binary_sensor.0x158d00027129ae_contact
  #         - binary_sensor.0x158d0001ef2ffc_contact
  #         - binary_sensor.0x158d0002a14c5e_contact
  #         - binary_sensor.0x158d0002529b9c_contact
  #         - binary_sensor.0x158d00025315e9_contact
  #         - binary_sensor.0x158d0001e5d6be_contact
  #         - binary_sensor.0x158d0002531749_contact
  #         - binary_sensor.0x158d00025371f6_contact
  #         - binary_sensor.0x158d000200ad58_contact
  #         - binary_sensor.0x158d00022ccffe_contact
  #         - binary_sensor.0x158d00025370d1_contact
  #       to: 'on'
  #   sensor:
  #     - name: Security Devices Last Triggered
  #       state:  '{{ trigger.from_state.attributes.friendly_name }}'

  # - trigger:
  #     - platform: state
  #       entity_id:
  #         - binary_sensor.0x158d0001ae9f61_motion
  #         - binary_sensor.0x158d0001aea602_motion
  #         - binary_sensor.0x158d0003f27ce2_motion
  #         - binary_sensor.0x158d0001e05856_motion
  #         - binary_sensor.0x158d0001e53cda_motion
  #         - binary_sensor.0x158d0001e54280_motion
  #         - binary_sensor.0x158d000224f89f_motion
  #         - binary_sensor.0x158d000236bb94_motion
  #         - binary_sensor.0x158d000236bc6d_motion
  #         #- binary_sensor.0x158d00024e58e7_motion
  #         - binary_sensor.0x158d0002b4729d_motion
  #         - binary_sensor.0x158d0002b482e9_motion
  #         - binary_sensor.0x158d0002b48381_motion
  #         - binary_sensor.0x158d0003140824_motion
  #         - binary_sensor.0x158d0001d5995e_motion
  #         - binary_sensor.motion_g3_flex_entrance
  #         - binary_sensor.motion_g3_flex_hall
  #         - binary_sensor.0x158d00027129ae_contact
  #         - binary_sensor.0x158d0001ef2ffc_contact
  #         - binary_sensor.0x158d0002a14c5e_contact
  #         - binary_sensor.0x158d0002529b9c_contact
  #         - binary_sensor.0x158d00025315e9_contact
  #         - binary_sensor.0x158d0001e5d6be_contact
  #         - binary_sensor.0x158d0002531749_contact
  #         - binary_sensor.0x158d00025371f6_contact
  #         - binary_sensor.0x158d000200ad58_contact
  #         - binary_sensor.0x158d00022ccffe_contact
  #         - binary_sensor.0x158d00025370d1_contact
  #       to: 'on'
  #   sensor:
  #     - name: Security Devices Last Triggered
  #       state:  '{{ trigger.from_state.attributes.friendly_name }}'

  # - trigger:
  #     - platform: state
  #       entity_id:
  #         - binary_sensor.0x158d00027129ae_contact
  #         - binary_sensor.0x158d0001ef2ffc_contact
  #         - binary_sensor.0x158d0002a14c5e_contact
  #         - binary_sensor.0x158d0002529b9c_contact
  #         - binary_sensor.0x158d00025315e9_contact
  #         - binary_sensor.0x158d0001e5d6be_contact
  #         - binary_sensor.0x158d0002531749_contact
  #       to: 'on'
  #   sensor:
  #     - name: Door Last Change
  #       state:  '{{ trigger.from_state.attributes.friendly_name }}'

  # - trigger:
  #     - platform: state
  #       entity_id:
  #         - binary_sensor.0x158d00025371f6_contact
  #         - binary_sensor.0x158d000200ad58_contact
  #         - binary_sensor.0x158d00022ccffe_contact
  #         - binary_sensor.0x158d00025370d1_contact
  #       to: 'on'
  #   sensor:
  #     - name: Window Last Change
  #       state:  '{{ trigger.from_state.attributes.friendly_name }}'

  - sensor:
      - name: Home Status
        state: >
          {% if states('binary_sensor.family_home') == "on" %}
          Occupied
          {% else %}
          Empty
          {% endif %}
        icon: >
          {% if states('binary_sensor.family_home') == "on" %}
          mdi:home-account
          {% else %}
          mdi:home-outline
          {% endif %}

      - name: People Home
        state: "{{ expand('group.persons') | map(attribute='state') | select('eq','home')| list | length - (states('input_boolean.guest_mode')|replace('on','0'))|int(0) }}"
        unit_of_measurement: "ea"
        icon: mdi:account-group

      - name: Last Motion
        state: >
          {%- set sensors = expand('group.motioninternal') %}
          {% for sensor in sensors %}
            {% if as_timestamp(sensor.last_changed) == as_timestamp(sensors | map(attribute='last_changed') | max ) %}
              {{ sensor.name }}
            {% endif %}
          {% endfor %}

      # - name: Last Motion
      #   state: >
      #     {%- set sensors = expand('group.motioninternal') %}
      #     {% for sensor in sensors %}
      #       {% if as_timestamp(sensor.last_changed) == as_timestamp(sensors | map(attribute='last_changed') | max ) and is_state(sensor.entity_id,'on')%}
      #         {{ sensor.name }}
      #       {% endif %}
      #     {% endfor %}

      # - name: Last Motion Time
      #   state: '{{ as_timestamp(states.group.motioninternal.last_changed) | timestamp_custom("%a %d %b %H:%M",true,0) }}'

      - name: Security Devices Last Triggered
        state: >
          {%- set sensors = expand('group.securitydevices') %}
          {% for sensor in sensors %}
            {% if as_timestamp(sensor.last_changed) == as_timestamp(sensors | map(attribute='last_changed') | max) %}
              {{ sensor.name }}
            {% endif %}
          {% endfor %}

      # - name: Security Devices Last Triggered Time
      #   state: '{{ as_timestamp(states.group.securitydevices.last_changed) | timestamp_custom("%a %d %b %H:%M",true,0) }}'

      - name: Door Last Change
        state: >
          {%- set sensors = expand('group.doors') %}
          {% for sensor in sensors %}
            {% if as_timestamp(sensor.last_changed) == as_timestamp(sensors | map(attribute='last_changed') | max) %}
              {{ sensor.name }}
            {% endif %}
          {% endfor %}

      # - name: Door Last Change Time
      #   state: '{{ (as_timestamp(now())-as_timestamp(states.sensor.door_last_change.last_changed))|timestamp_custom("%H:%M:%S",true,0) }}'

      - name: Window Last Change
        state: >
          {%- set sensors = expand('group.windows') %}
          {% for sensor in sensors %}
            {% if as_timestamp(sensor.last_changed) == as_timestamp(sensors | map(attribute='last_changed') | max) %}
              {{ sensor.name }}
            {% endif %}
          {% endfor %}

      # - name: Window Last Chnage Time
      #   state: '{{ (as_timestamp(now())-as_timestamp(states.sensor.window_last_change.last_changed))|timestamp_custom("%H:%M:%S",true,0) }}'
