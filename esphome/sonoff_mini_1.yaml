substitutions:
  board_name: sonoff_mini_1

esphome:
  name: ${board_name}
  comment: Doorbell HB
  on_boot:
    then:    
      - switch.turn_off: relay
      - light.turn_off: wifi_led

esp8266:
  board: esp01_1m

wifi:
  ssid: !secret wifi_ssid_hb
  password: !secret wifi_pass
  domain: .local
  reboot_timeout: 15min
  #output_power: 17.5dB
  fast_connect: true
  #power_save_mode: none
  manual_ip:
    static_ip: 192.168.1.52
    gateway: 192.168.1.1
    subnet: 255.255.255.0
    dns1: 192.168.1.1
    dns2: 8.8.8.8

logger:
  baud_rate: 0

api:
  reboot_timeout: 0s

ota:

web_server:
  port: 80

output:
  - platform: gpio
    id: manual_status_led
    pin: 
      number: GPIO13
      inverted: true
      
light:
  - platform: binary
    name: ${board_name}_Status_LED
    output: manual_status_led
    id: wifi_led
  
binary_sensor:
  - platform: gpio
    pin: GPIO00
    id: reset
    internal: true
    filters:
      - invert:
    on_press:
      - switch.toggle: 
          id: relay

  - platform: gpio
    name: ${board_name}_Switch
    pin: 
      number: GPIO04
      inverted: True
    id: switch_1
    filters:
      - delayed_on: 20ms
      - delayed_off: 20ms
    on_press:
      then:
        - if:
            condition:
              not:
                - switch.is_on: id_mute
            then:
              - switch.turn_on:
                  id: relay
    on_release:
      then:
        - switch.turn_off:
            id: relay
        - light.turn_off: wifi_led
              
  - platform: status
    name: ${board_name}_Status

switch:
  - platform: gpio
    name: ${board_name}_Relay
    pin: GPIO12
    id: relay
    restore_mode: RESTORE_DEFAULT_OFF

  - platform: template
    name: ${board_name}_Mute
    id: id_mute
    icon: mdi:volume-off
    optimistic: true
    restore_state: true

sensor:
  - platform: uptime
    name: ${board_name}_Uptime_s
    id: uptime_sensor

  - platform: wifi_signal
    name: ${board_name}_WiFi_RSSI
    update_interval: 60s

text_sensor:
  - platform: template
    name: ${board_name}_Uptime
    lambda: |-
      uint32_t dur = id(uptime_sensor).state;
      int dys = 0;
      int hrs = 0;
      int mnts = 0;
      if (dur > 86399) {
        dys = trunc(dur / 86400);
        dur = dur - (dys * 86400);
      }
      if (dur > 3599) {
        hrs = trunc(dur / 3600);
        dur = dur - (hrs * 3600);
      }
      if (dur > 59) {
        mnts = trunc(dur / 60);
        dur = dur - (mnts * 60);
      }
      char buffer[17];
      sprintf(buffer, "%ud %02uh %02um %02us", dys, hrs, mnts, dur);
      return {buffer};
    icon: mdi:clock-start
    update_interval: 15s

  - platform: wifi_info
    ip_address:
      name: ${board_name}_IP
    ssid:
      name: ${board_name}_SSID
    bssid:
      name: ${board_name}_BSSID
    mac_address:
      name: ${board_name}_Mac
    scan_results:
      name: ${board_name}_Latest_Scan_Results

  - platform: version
    name: ${board_name}_ESPHome_Version
    hide_timestamp: true

button:
  - platform: restart
    name: ${board_name}_Restart
    
time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Moscow