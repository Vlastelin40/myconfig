substitutions:
  board_name: sonoff_mini

esphome:
  name: sonoff_mini
  platform: ESP8266
  board: esp01_1m
  comment: Sonoff Mini Thermo Pad Controller 
  on_boot:
    priority: -100
    then:
      - wait_until:
          time.has_time:
      # - wait_until:
      #     mqtt.connected:
      - delay: 1s
      - if:
          condition:
            wifi.connected:
          then:
            - light.turn_on: wifi_led
      - delay: 5s
      - if:
          condition:
            sensor.in_range:
              id: dallas_ambient
              above: 30
          then:
            - climate.control:
                id: climate_pad
                mode: 'OFF'
      - if:
          condition:
            sensor.in_range:
              id: dallas_ambient
              below: 30
          then:
            - climate.control:
                id: climate_pad
                mode: HEAT


wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass
  domain: .local
  reboot_timeout: 15min
  #output_power: 17.5dB
  fast_connect: true
  #power_save_mode: none
  manual_ip:
    static_ip: 192.168.1.117
    gateway: 192.168.1.1
    subnet: 255.255.255.0
    dns1: 192.168.1.1
    dns2: 8.8.8.8

logger:

api:
  reboot_timeout: 0s

ota:

web_server:
  port: 80

dallas:
  - pin: GPIO04
    update_interval: 3s
    id: dallas_node

output:
  - platform: esp8266_pwm
    id: manual_status_led
    pin: 
      number: GPIO13
      inverted: false

light:
  - platform: monochromatic
    name: ${board_name}_Status_LED
    internal: true
    output: manual_status_led
    id: wifi_led
  
binary_sensor:
  - platform: gpio
    pin: GPIO00
    id: reset
    internal: true
    filters:
      - invert:
      - delayed_off: 10ms
    on_press:
      - switch.toggle: 
          id: relay

  # - platform: gpio
  #   name: ${board_name}_sw
  #   pin: GPIO04
  #   id: switch_1
  #   on_press:
  #     then:
  #       - switch.toggle:
  #           id: relay
  #   on_release:
  #     then:
  #       - switch.toggle:
  #           id: relay

  - platform: status
    name: ${board_name}_Status

switch:
  - platform: gpio
    name: ${board_name}_Relay
    pin: GPIO12
    id: relay

climate:
  - platform: bang_bang
    visual:
      min_temperature: 32 °C
      max_temperature: 42 °C
      temperature_step: 1 °C  
    name: ${board_name}_Thermo_Pad
    sensor: dallas_pad
    default_target_temperature_low: 33 °C
    default_target_temperature_high: 38 °C
    heat_action:
      - switch.turn_on: relay
    idle_action:
      - switch.turn_off: relay
    id: climate_pad
    
sensor:
  - platform: uptime
    name: ${board_name}_Uptime_s
    id: uptime_sensor

  - platform: wifi_signal
    name: ${board_name}_WiFi_RSSI
    update_interval: 60s

  - platform: dallas
    address: 0x613C01D075384328
    dallas_id: dallas_node
    name: ${board_name}_ambient_temperature
    accuracy_decimals: 2
    resolution: 12
    id: dallas_ambient
    on_value_range:
      - above: 30
        then:
          - climate.control:
              id: climate_pad
              mode: 'OFF'
      - below: 30
        then:
          - climate.control:
              id: climate_pad
              mode: HEAT            

  - platform: dallas
    address: 0x2A01203768D6D728
    dallas_id: dallas_node
    name: ${board_name}_pad_temperture
    accuracy_decimals: 2
    resolution: 12
    id: dallas_pad

text_sensor:
  - platform: template
    name: ${board_name}_Uptime
    lambda: |-
      uint32_t dur = id(uptime_sensor).state;
      int dys = 0;
      int hrs = 0;
      int mnts = 0;
      if (dur > 86399) {
        dys = trunc(dur / 86400);
        dur = dur - (dys * 86400);
      }
      if (dur > 3599) {
        hrs = trunc(dur / 3600);
        dur = dur - (hrs * 3600);
      }
      if (dur > 59) {
        mnts = trunc(dur / 60);
        dur = dur - (mnts * 60);
      }
      char buffer[17];
      sprintf(buffer, "%ud %02uh %02um %02us", dys, hrs, mnts, dur);
      return {buffer};
    icon: mdi:clock-start
    update_interval: 15s

button:
  - platform: restart
    name: ${board_name}_Restart

time:
  - platform: homeassistant
    id: homeassistant_time