substitutions:
  board_name: digma_ir_mb

esphome:
  name: ${board_name}
  platform: ESP8266
  board: esp01_1m

wifi:
  ssid: !secret wifi_ssid_mb
  password: !secret wifi_pass
  domain: .local
  reboot_timeout: 15min
  #output_power: 17.5dB
  fast_connect: true
  #power_save_mode: none
  # networks:
  #   - ssid: !secret wifi_ssid
  #     password: !secret wifi_pass
  #     hidden: false
  #     bssid: !secret wifi_bssid_mb_main
  #     priority: 0
  #   - ssid: !secret wifi_ssid
  #     password: !secret wifi_pass
  #     hidden: false
  manual_ip:
    static_ip: 192.168.1.87
    gateway: 192.168.1.1
    subnet: 255.255.255.0
    dns1: 192.168.1.1
    dns2: 8.8.8.8

logger:

api:
  reboot_timeout: 0s

ota:

status_led:
  pin: 
    number: GPIO4
    inverted: true

remote_receiver:
  pin: 
    number: GPIO5
    inverted: true
  dump: all

remote_transmitter:
  pin: 
    number: GPIO14
    inverted: false
  carrier_duty_percent: 50%

binary_sensor:
  - platform: status
    name: ${board_name}_Status

  - platform: gpio
    pin:
      number: GPIO13
      inverted: true
    internal: true
    name: ${board_name}_Button
    id: id_button

button:
  - platform: restart
    name: ${board_name}_Restart

  - platform: template
    name: ${board_name}_Breather_PWR
    icon: mdi:power
    on_press:
      - remote_transmitter.transmit_nec:
          address: '0xFF00'
          command: '0xFB04'
  
  - platform: template
    name: ${board_name}_Breather_UP
    icon: mdi:arrow-up-bold-box
    on_press:
      - remote_transmitter.transmit_nec:
          address: '0xFF00'
          command: '0xF30C'
  
  - platform: template
    name: ${board_name}_Breather_DOWN
    icon: mdi:arrow-down-bold-box
    on_press:
      - remote_transmitter.transmit_nec:
          address: '0xFF00'
          command: '0xFF00'

text_sensor:
  - platform: template
    name: ${board_name}_Uptime
    lambda: |-
      uint32_t dur = id(uptime_sensor).state;
      int dys = 0;
      int hrs = 0;
      int mnts = 0;
      if (dur > 86399) {
        dys = trunc(dur / 86400);
        dur = dur - (dys * 86400);
      }
      if (dur > 3599) {
        hrs = trunc(dur / 3600);
        dur = dur - (hrs * 3600);
      }
      if (dur > 59) {
        mnts = trunc(dur / 60);
        dur = dur - (mnts * 60);
      }
      char buffer[17];
      sprintf(buffer, "%ud %02uh %02um %02us", dys, hrs, mnts, dur);
      return {buffer};
    icon: mdi:clock-start
    update_interval: 15s

  - platform: wifi_info
    ip_address:
      name: ${board_name}_IP
    ssid:
      name: ${board_name}_SSID
    bssid:
      name: ${board_name}_BSSID
    mac_address:
      name: ${board_name}_Mac
    scan_results:
      name: ${board_name}_Latest_Scan_Results

  - platform: version
    name: ${board_name}_ESPHome_Version
    hide_timestamp: true
    
sensor:
  - platform: uptime
    name: ${board_name}_Uptime_s
    id: uptime_sensor
    update_interval: 15s

  - platform: wifi_signal
    name: ${board_name}_WiFi_RSSI
    update_interval: 60s

time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Moscow