substitutions:
  board_name: sonoff_dualr3_1

esphome:
  name: ${board_name}
  platform: ESP32
  board: esp32dev

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass
  domain: .localdomain
  reboot_timeout: 15min
  output_power: 17.5dB
  fast_connect: true
  power_save_mode: none

api:

ota:

web_server:
  port: 80

logger:
  baud_rate: 0

# remove # below to enable ble tracking
#esp32_ble_tracker:

uart:
  rx_pin: RX
  baud_rate: 4800

sensor:
  - platform: uptime
    name: ${board_name}_Uptime_s
    id: uptime_sensor
    update_interval: 15s

  - platform: wifi_signal
    name: ${board_name}_WiFi_RSSI
    update_interval: 60s

#  - platform: cse7766
#    update_interval: 5s
#    current:
#      name: ${board_name}_Current
#    voltage:
#      name: ${board_name}_Voltage
#    power:
#      name: ${board_name}_Power
#      id: power
#      on_value_range:
#        - above: 1.0
#          then:
#            - logger.log: "Power above 1.0A"
#        - below: 1.0
#          then:
#            - logger.log: "Power below 1.0A"

output:
  - platform: gpio
    pin: GPIO27
    id: relay1
  - platform: gpio
    pin: GPIO14
    id: relay2

switch:
  - platform: restart
    name: ${board_name}_Restart

  - platform: output
    name: ${board_name}_Relay_1
    output: relay1
    id: sw1
  - platform: output
    name: ${board_name}_relay_2
    output: relay2
    id: sw2

status_led:
  pin:
    number: GPIO13
    inverted: yes

binary_sensor:
  - platform: status
    name: ${board_name}_Status

  - platform: gpio
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: True
    name: ${board_name}_Button
    on_press:
      - logger.log: "button"
      - switch.toggle: sw1
  - platform: gpio
    pin:
      number: GPIO32
      mode: INPUT_PULLUP
      inverted: True
    name: ${board_name}_Switch_1
    on_press:
      - logger.log: "switch 1"
      - switch.toggle: sw1
  - platform: gpio
    pin:
      number: GPIO33
      mode: INPUT_PULLUP
      inverted: True
    name: ${board_name}_Switch_2
    on_press:
      - logger.log: "switch 2"
      - switch.toggle: sw2
      
text_sensor:
  - platform: template
    name: ${board_name}_Uptime
    lambda: |-
      uint32_t dur = id(uptime_sensor).state;
      int dys = 0;
      int hrs = 0;
      int mnts = 0;
      if (dur > 86399) {
        dys = trunc(dur / 86400);
        dur = dur - (dys * 86400);
      }
      if (dur > 3599) {
        hrs = trunc(dur / 3600);
        dur = dur - (hrs * 3600);
      }
      if (dur > 59) {
        mnts = trunc(dur / 60);
        dur = dur - (mnts * 60);
      }
      char buffer[17];
      sprintf(buffer, "%ud %02uh %02um %02us", dys, hrs, mnts, dur);
      return {buffer};
    icon: mdi:clock-start
    update_interval: 15s

  - platform: wifi_info
    ip_address:
      name: ${board_name}_IP
    ssid:
      name: ${board_name}_SSID
    bssid:
      name: ${board_name}_BSSID
    mac_address:
      name: ${board_name}_Mac

time:
  - platform: homeassistant
    id: homeassistant_time
  - platform: sntp
    id: sntp_time
    timezone: Europe/Moscow      