substitutions:
  board_name: d1mini_air_freshener
  
esphome:
  name: ${board_name}
  platform: ESP8266
  board: d1_mini

wifi:
  ssid: !secret wifi_ssid_k
  password: !secret wifi_pass
  domain: .localdomain
  reboot_timeout: 30min
  output_power: 17.5dB
  fast_connect: true
  power_save_mode: none
  manual_ip:
    static_ip: 192.168.1.98
    gateway: 192.168.1.1
    subnet: 255.255.255.0
    dns1: 192.168.1.1
    dns2: 8.8.8.8


logger:

api:
  reboot_timeout: 0s

i2c:
  scl: GPIO05
  sda: GPIO04
  scan: True
  id: i2c_bus

ota:

web_server:
  port: 80

binary_sensor:
  - platform: status
    name: ${board_name}_Status

  - platform: gpio
    pin: GPIO14
    name: ${board_name}_Motion
    device_class: motion
    id: sr602_motion

  - platform: gpio
    pin:
      number: GPIO13
      #mode: INPUT_PULLUP
    name: ${board_name}_Button
    id: button
    

text_sensor:
  - platform: template
    name: ${board_name}_Uptime
    lambda: |-
      uint32_t dur = id(uptime_sensor).state;
      int dys = 0;
      int hrs = 0;
      int mnts = 0;
      if (dur > 86399) {
        dys = trunc(dur / 86400);
        dur = dur - (dys * 86400);
      }
      if (dur > 3599) {
        hrs = trunc(dur / 3600);
        dur = dur - (hrs * 3600);
      }
      if (dur > 59) {
        mnts = trunc(dur / 60);
        dur = dur - (mnts * 60);
      }
      char buffer[17];
      sprintf(buffer, "%ud %02uh %02um %02us", dys, hrs, mnts, dur);
      return {buffer};
    icon: mdi:clock-start
    update_interval: 15s


sensor:
  - platform: uptime
    name: ${board_name}_Uptime_s
    id: uptime_sensor
    update_interval: 15s

  - platform: wifi_signal
    name: ${board_name}_WiFi_RSSI
    update_interval: 60s

  - platform: adc
    pin: A0
    name: ${board_name}_ADC
    id: adc_value
    filters:
      - multiply: 3.3
    update_interval: 2s

  - platform: template
    name: ${board_name}_AirQ
    lambda: return ((id(adc_value).state)*(-30.303)+100);
    unit_of_measurement: "%"
    update_interval: 2s
    icon: mdi:air-filter
  
  - platform: vl53l0x
    name: ${board_name}_Distance
    address: 0x29
    update_interval: 15s
    long_range: True
    id: vlx_distance

  - platform: bme680
    temperature:
      name: ${board_name}_Temperature
      oversampling: 4x
      id: bme680_temperature
    pressure:
      name: ${board_name}_Pressure
      oversampling: 4x
      id: bme680_pressure
    humidity:
      name: ${board_name}_Humidity
      oversampling: 4x
      id: bme680_humidity
    gas_resistance:
      name: ${board_name}_Gas_Resistance
      id: bme680_gas_resistance
    address: 0x76
    update_interval: 5s

  - platform: template
    name: ${board_name}_Air_Quality
    id: IAQ
    unit_of_measurement: '%'
    lambda: 'return id(bme680_gas_resistance).state / 125000 * 100;'
    icon: mdi:air-purifier
    update_interval: 5s

  - platform: template
    name: ${board_name}_Absolute_Humidity
    lambda: |-
      const float mw = 18.01534;    // molar mass of water g/mol
      const float r = 8.31447215;   // Universal gas constant J/mol/K
      return (6.112 * powf(2.718281828, (17.67 * id(bme680_temperature).state) /
        (id(bme680_temperature).state + 243.5)) * id(bme680_humidity).state * mw) /
        ((273.15 + id(bme680_temperature).state) * r); // in grams/m^3
    accuracy_decimals: 1
    update_interval: 15s
    icon: 'mdi:water'
    unit_of_measurement: 'g/mÂ³'

switch:
  - platform: restart
    name: ${board_name}_Restart

  - platform: gpio
    pin: GPIO12
    name: ${board_name}_Switch
    internal: true
    id: valve
  
  - platform: template
    name: ${board_name}_Valve
    icon: mdi:spray
    id: spray
    turn_on_action:
    - switch.turn_on: valve
    - delay: 100ms
    - switch.turn_off: valve

time:
  - platform: homeassistant
    id: homeassistant_time    