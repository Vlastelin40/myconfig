substitutions:
  board_name: esp32_hood_k

esphome:
  name: ${board_name}
  platform: ESP32
  board: esp-wrover-kit
  comment: ESP32 BME280\Dallas\MAX6675\Dual Relay Node K

wifi:
  reboot_timeout: 15min
  output_power: 10dB
  power_save_mode: none
  manual_ip:
    static_ip: 192.168.1.72
    gateway: 192.168.1.1
    subnet: 255.255.255.0
    dns1: 192.168.1.1
    dns2: 8.8.8.8
  networks:
    - ssid: !secret wifi_ssid_k
      password: !secret wifi_pass
      hidden: true
      bssid: !secret wifi_bssid_hs_iot
      priority: 2
    - ssid: !secret wifi_ssid
      password: !secret wifi_pass
      hidden: false
      bssid: !secret wifi_bssid_hs_main
      priority: 1
    - ssid: !secret wifi_ssid
      password: !secret wifi_pass
      hidden: false
      priority: 0


logger:
  baud_rate: 0
  
api:
  reboot_timeout: 15min

ota:

web_server:
  port: 80

i2c:
  sda: GPIO21
  scl: GPIO22
  scan: True

# uart:
#   rx_pin: GPIO03
#   tx_pin: GPIO01
#   baud_rate: 9600
#   stop_bits: 1

spi:
  clk_pin: GPIO14
  #mosi_pin: GPIO13
  miso_pin: GPIO12

dallas:
  - pin: GPIO26
    update_interval: 15s
    id: dallas_node

binary_sensor:
  - platform: status
    name: ${board_name}_Status

  - platform: template
    name: ${board_name}_Oven_Status
    lambda: |-
      if (id(oven_temp).state > 50) {
        return true;
      } else {
        return false;
      }
    device_class: heat

  # - platform: gpio
  #   pin:
  #     number: GPIO18
  #     inverted: True
  #   name: ${board_name}_Light

  # - platform: gpio
  #   pin:
  #     number: GPIO19
  #     inverted: True
  #   name: ${board_name}_Fan
    

text_sensor:
  - platform: template
    name: ${board_name}_Uptime
    lambda: |-
      uint32_t dur = id(uptime_sensor).state;
      int dys = 0;
      int hrs = 0;
      int mnts = 0;
      if (dur > 86399) {
        dys = trunc(dur / 86400);
        dur = dur - (dys * 86400);
      }
      if (dur > 3599) {
        hrs = trunc(dur / 3600);
        dur = dur - (hrs * 3600);
      }
      if (dur > 59) {
        mnts = trunc(dur / 60);
        dur = dur - (mnts * 60);
      }
      char buffer[17];
      sprintf(buffer, "%ud %02uh %02um %02us", dys, hrs, mnts, dur);
      return {buffer};
    icon: mdi:clock-start
    update_interval: 15s

sensor:
  - platform: uptime
    name: ${board_name}_Uptime_s
    id: uptime_sensor
    update_interval: 15s

  - platform: wifi_signal
    name: ${board_name}_WiFi_RSSI
    update_interval: 60s

  - platform: dallas
    address: 0x993C01D607966B28
    name: ${board_name}_Dallas
    dallas_id: dallas_node
    accuracy_decimals: 1
    resolution: 12

  - platform: max6675
    name: ${board_name}_MAX6675
    cs_pin: GPIO15
    update_interval: 15s
    id: oven_temp

  - platform: max31855
    name: ${board_name}_MAX31855
    cs_pin: GPIO27
    update_interval: 15s


  - platform: bme280
    temperature:
      name: ${board_name}_BME280_Temperature
      oversampling: 16x
      accuracy_decimals: 1
    pressure:
      name: ${board_name}_BME280_Pressure
      accuracy_decimals: 0
    humidity:
      name: ${board_name}_BME280_Humidity
      accuracy_decimals: 0
    address: 0x76
    update_interval: 30s    
    
switch:
  - platform: restart
    name: ${board_name}_Restart

  - platform: gpio
    pin: 
      number: GPIO16
      inverted: yes
    name: ${board_name}_Light
    id: relay1
    restore_mode: RESTORE_DEFAULT_OFF

  - platform: gpio
    pin: 
      number: GPIO17
      inverted: yes
    name: ${board_name}_Fan
    id: relay2
    restore_mode: RESTORE_DEFAULT_OFF


time:
  - platform: homeassistant
    id: homeassistant_time
  - platform: sntp
    id: sntp_time
    timezone: Europe/Moscow