substitutions:
  board_name: esp32_ble_tracker

esphome:
  name: ${board_name}
  platform: ESP32
  board: esp32dev

wifi:
  ssid: !secret wifi_ssid_hb
  password: !secret wifi_pass
  domain: .local
  reboot_timeout: 15min
  #output_power: 17.5dB
  fast_connect: true
  #power_save_mode: none
  manual_ip:
    static_ip: 192.168.1.109
    gateway: 192.168.1.1
    subnet: 255.255.255.0
    dns1: 192.168.1.1
    dns2: 8.8.8.8

logger:
  baud_rate: 0

api:
  reboot_timeout: 0s

ota:

esp32_ble_tracker:
  # scan_parameters:
  #   interval: 512ms
  #   window: 48ms
  #   active: true

#exposure_notifications:
  #on_exposure_notification:
   # then:
      #- homeassistant.service:
      #    service: notify.telegram
      #    data:
      #      message: "Tracker HB - COVID-19 Exposure Notify!"
     # - lambda: |
      #    ESP_LOGD("main", "Got notification:");
       #   ESP_LOGD("main", "  RPI: %s", hexencode(x.rolling_proximity_identifier).c_str());
        #  ESP_LOGD("main", "  RSSI: %d", x.rssi);

web_server:
  port: 80

binary_sensor:
  - platform: status
    name: ${board_name}_Status

  - platform: ble_presence
    mac_address: 7E:FE:3E:EC:59:FB
    name: ${board_name}_White
    device_class: presence

  - platform: ble_presence
    mac_address: 3B:EF:3E:DE:98:6B
    name: ${board_name}_Grey
    device_class: presence

  - platform: ble_presence
    mac_address: 2A:BC:3E:DC:57:65
    name: ${board_name}_Pink
    device_class: presence

  - platform: ble_presence
    mac_address: 6B:9C:3E:D1:C5:9A
    name: ${board_name}_Green
    device_class: presence

#   - platform: ble_presence
#     mac_address: FF:FF:B0:00:95:1F
#     name: ${board_name}_iTag_white
#     device_class: presence

# # FF:FF:B0:00:95:1F white itag

# 7E:FE:3E:EC:59:FB white
# 6B:9C:3E:D1:C5:9A green
# 2A:BC:3E:DC:57:65 PINK
# 3B:EF:3E:DE:98:6B GREY

sensor:
  - platform: uptime
    name: ${board_name}_Uptime_s
    id: uptime_sensor
    update_interval: 15s

  - platform: wifi_signal
    name: ${board_name}_WiFi_RSSI
    update_interval: 60s
    
  - platform: ble_rssi
    mac_address: 7E:FE:3E:EC:59:FB
    name: ${board_name}_White_RSSI
    icon: "mdi:wifi"

  - platform: ble_rssi
    mac_address: 3B:EF:3E:DE:98:6B
    name: ${board_name}_Grey_RSSI
    icon: "mdi:wifi"

  - platform: ble_rssi
    mac_address: 2A:BC:3E:DC:57:65
    name: ${board_name}_Pink_RSSI
    icon: "mdi:wifi"

  - platform: ble_rssi
    mac_address: 6B:9C:3E:D1:C5:9A
    name: ${board_name}_Green_RSSI
    icon: "mdi:wifi"

  # - platform: ble_rssi
  #   mac_address: FF:FF:B0:00:95:1F
  #   name: ${board_name}_iTag_white RSSI
  #   icon: "mdi:wifi"

  # - platform: template
  #   name: ${board_name}_free_ram
  #   lambda: "return ESP.getFreeHeap();"
  #   id: heap_size
  #   update_interval: 20s
  #   unit_of_measurement: bytes
  #   accuracy_decimals: 0

text_sensor:
  - platform: template
    name: ${board_name}_Uptime
    lambda: |-
      uint32_t dur = id(uptime_sensor).state;
      int dys = 0;
      int hrs = 0;
      int mnts = 0;
      if (dur > 86399) {
        dys = trunc(dur / 86400);
        dur = dur - (dys * 86400);
      }
      if (dur > 3599) {
        hrs = trunc(dur / 3600);
        dur = dur - (hrs * 3600);
      }
      if (dur > 59) {
        mnts = trunc(dur / 60);
        dur = dur - (mnts * 60);
      }
      char buffer[17];
      sprintf(buffer, "%ud %02uh %02um %02us", dys, hrs, mnts, dur);
      return {buffer};
    icon: mdi:clock-start
    update_interval: 15s

switch:
  - platform: restart
    name: ${board_name}_Restart
    id: restart_switch

time:
  - platform: homeassistant
    id: esp_time