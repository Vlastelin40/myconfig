# ##################################
# System - Hass.io GDrive time
# ##################################
- alias: snapshot_daily_gdrive_time
  initial_state: true
  trigger:
    - platform: state
      entity_id: sensor.gdrive_last_backup
  condition:
    - condition: template
      value_template: "{{states('sensor.ha_uptime')|float > 5}}"
  action:
    - service: notify.telegram
      data_template: 
        message: "\U00002705 GDrive бэкап сделан {{states('sensor.gdrive_last_backup')}}"

# ##################################
# System - Hass.io GDrive time
# ##################################
- alias: snapshot_daily_gdrive_status
  initial_state: true
  trigger:
    - platform: state
      entity_id: sensor.gdrive_backup_state
  condition:
    - condition: template
      value_template: "{{states('sensor.ha_uptime')|float > 5}}"
  action:
    - service: notify.telegram
      data_template: 
        message: "\U00002705 GDrive бэкап статус {{trigger.from_state.state}} -> {{trigger.to_state.state}}"

# ##################################
# System - Hass.io GDrive Stale
# ##################################
- alias: snapshot_daily_gdrive_stale
  initial_state: true
  trigger:
    - platform: state
      entity_id: binary_sensor.snapshots_stale
      to: 'on'
  action:
    - service: notify.telegram
      data_template: 
        message: "\U0000274C GDrive снапшот залип!"


# ##################################
# System - Hass.io Daily Snapshot
# ##################################
# - alias: snapshot_daily_snapshot
#   initial_state: false
#   trigger:
#     - platform: time
#       at: '3:00:00'
#   action:
#     - service: hassio.snapshot_full
#       data_template:
#         name: auto_snap_main_{{ now().strftime('%d.%m.%Y') }}
#     - service: notify.telegram
#       data_template: 
#         message: "\U00002705 Резервное копирование выполнено"

# ##################################
# System - Hass.io Daily G-Drive Snapshot upload
# ##################################
# - alias: snapshot_daily_google_drive_upload
#   initial_state: false
#   trigger:
#     - platform: time
#       at: '06:00:00'
#   action:
#     - service: rest_command.google_backup
#     - delay: '00:05:00'
#     - service: mqtt.publish
#       data_template:
#         topic: "googlebackup/result"
#         payload: "{{ states('sensor.google_backup_status')}}"
#         retain: true
#     - service: notify.telegram
#       data_template: 
#         message: "{% if (as_timestamp(now()) - as_timestamp(states.sensor.last_google_backup.last_updated)) < 600 %}\U00002705 G-Drive бэкап выполнен успешно!{% else %} \U00002757 Внимание! G-Drive бэкап не выполнен!{% endif %}"
        
# ##################################
# System - Hass.io Daily G-Drive updated
# ##################################
# - alias: snapshot_daily_google_drive_update
#   initial_state: false
#   trigger:
#     - platform: state
#       entity_id: sensor.last_google_backup
#   action:
#     - service: notify.telegram
#       data_template: 
#         message: "\U00002705 G-Drive бэкап сделан {{states('sensor.last_google_backup')}}"