substitutions:
  board_name: esp32_fan_control

esphome:
  name: ${board_name}
  platform: ESP32
  board: esp-wrover-kit
  comment: ESP32 Fan Control

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass
  domain: .local
  reboot_timeout: 15min
  fast_connect: true
  manual_ip:
    static_ip: 192.168.1.149
    gateway: 192.168.1.1
    subnet: 255.255.255.0
    dns1: 192.168.1.1
    dns2: 8.8.8.8

logger:
  baud_rate: 0
  
api:
  reboot_timeout: 10min

ota:

web_server:
  port: 80

# i2c:
#   sda: GPIO21
#   scl: GPIO22
#   scan: True

# bme680_bsec:
#   address: 0x77

# uart:
#   rx_pin: GPIO03
#   tx_pin: GPIO01
#   baud_rate: 9600
#   stop_bits: 1

# spi:
#   # - id: spi_oven
#   #   clk_pin: GPIO14
#   #   #mosi_pin: GPIO13
#   #   miso_pin: GPIO12

#   - id: spi_hood
#     clk_pin: GPIO18
#     #mosi_pin: GPIO23
#     miso_pin: GPIO19

# dallas:
#   - pin: GPIO26
#     update_interval: 30s
#     id: dallas_node

output:
  - platform: ledc
    pin: GPIO16
    id: id_pwm1
    frequency: 19531Hz

  - platform: ledc
    pin: GPIO17
    id: id_pwm2
    frequency: 5000Hz

fan:
  - platform: speed
    output: id_pwm1
    name: ${board_name}_CPU_Fan
    
  - platform: speed
    output: id_pwm2
    name: ${board_name}_CHA_Fan    

binary_sensor:
  - platform: status
    name: ${board_name}_Status
    id: id_status

text_sensor:
  - platform: template
    name: ${board_name}_Uptime
    lambda: |-
      uint32_t dur = id(uptime_sensor).state;
      int dys = 0;
      int hrs = 0;
      int mnts = 0;
      if (dur > 86399) {
        dys = trunc(dur / 86400);
        dur = dur - (dys * 86400);
      }
      if (dur > 3599) {
        hrs = trunc(dur / 3600);
        dur = dur - (hrs * 3600);
      }
      if (dur > 59) {
        mnts = trunc(dur / 60);
        dur = dur - (mnts * 60);
      }
      char buffer[17];
      sprintf(buffer, "%ud %02uh %02um %02us", dys, hrs, mnts, dur);
      return {buffer};
    icon: mdi:clock-start
    update_interval: 15s

  - platform: wifi_info
    ip_address:
      name: ${board_name}_IP
    ssid:
      name: ${board_name}_SSID
    bssid:
      name: ${board_name}_BSSID
    mac_address:
      name: ${board_name}_Mac

sensor:
  - platform: uptime
    name: ${board_name}_Uptime_s
    id: uptime_sensor
    update_interval: 15s

  - platform: wifi_signal
    name: ${board_name}_WiFi_RSSI
    update_interval: 60s

switch:
  - platform: restart
    name: ${board_name}_Restart

time:
  - platform: homeassistant
    id: homeassistant_time
  - platform: sntp
    id: sntp_time
    timezone: Europe/Moscow