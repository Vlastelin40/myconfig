substitutions:
  board_name: shp5_socket_1

esphome:
  name: ${board_name}
  platform: ESP8266
  board: esp8285
  on_boot:
    - output.turn_on: red_led

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass
  domain: .local
  reboot_timeout: 15min
  manual_ip:
    static_ip: 192.168.1.135
    gateway: 192.168.1.1
    subnet: 255.255.255.0
    dns1: 192.168.1.1
    dns2: 8.8.8.8

# Enable logging
logger:
  baud_rate: 0

uart:
  tx_pin: GPIO01
  rx_pin: GPIO03
  baud_rate: 4800

# Enable Home Assistant API
api:
  reboot_timeout: 0s
 
ota:

web_server:
  port: 80

binary_sensor:
  - platform: status
    name: ${board_name}_Status
    
  - platform: gpio
    name: ${board_name}_Button
    pin:
      number: GPIO16
      mode: INPUT_PULLUP
      inverted: True
    on_press:
      - switch.toggle: relay_220
    on_double_click:
      min_length: 50ms
      max_length: 350ms
      then:
      - switch.toggle: relay_usb

output:
  - platform: gpio
    pin: GPIO00
    inverted: true
    id: red_led

status_led:
  pin:
    number: GPIO02
    inverted: true

switch:
  - platform: gpio
    name: ${board_name}_220_Relay
    pin: GPIO14
    id: relay_220
    restore_mode: RESTORE_DEFAULT_ON
    on_turn_on:
      - output.turn_on: red_led
    on_turn_off:
      - output.turn_off: red_led
      
  - platform: gpio
    name: ${board_name}_USB_relay
    pin: GPIO05
    id: relay_usb
    restore_mode: RESTORE_DEFAULT_ON

  - platform: restart
    name: ${board_name}_Restart

sensor:
  - platform: cse7766
    current:
      name: ${board_name}_Amperage
      icon: mdi:current-ac
      unit_of_measurement: 'A'
      accuracy_decimals: 3
    voltage:
      name: ${board_name}_Voltage
      icon: mdi:flash-circle
      unit_of_measurement: 'V'
      filters:
        - multiply: 1.92
    power:
      name: ${board_name}_Power
      icon: mdi:flash-outline
      unit_of_measurement: 'W'
      filters:
        - multiply: 2.14
    update_interval: 10s
  
  - platform: uptime
    name: ${board_name}_Uptime_s
    id: uptime_sensor

  - platform: wifi_signal
    name: ${board_name}_WiFi_RSSI
    update_interval: 60s

text_sensor:
  - platform: template
    name: ${board_name}_Uptime
    lambda: |-
        int seconds = round(id(uptime_sensor).raw_state);
        int days = seconds / (24 * 3600);
        seconds = seconds % (24 * 3600);
        int hours = seconds / 3600;
        seconds = seconds % 3600;
        int minutes = seconds /  60;
        seconds = seconds % 60;
        return (
          (days ? to_string(days) + "d " : "00d ") +
          (hours ? to_string(hours) + "h " : "00h ") +
          (minutes ? to_string(minutes) + "m " : "00m ") +
          (to_string(seconds) + "s")
        );
    icon: mdi:clock-start
    update_interval: 15s

time:
  - platform: homeassistant
    id: homeassistant_time