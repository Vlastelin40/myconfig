# #####################################################################################
#
# SYSTEM - General
#
# #####################################################################################
# System - Errors counter
# ##################################
- alias: system_error_counter
  id: system_error_counter
  initial_state: true
  mode: parallel
  max_exceeded: silent
  trigger:
    - platform: event
      event_type: system_log_event
      event_data:
        level: ERROR
  condition:
    - condition: template
      value_template: "{{ not 'system_error_counter' in trigger.event.data.message }}"
  action:
    - service: counter.increment
      entity_id: counter.error_counter

# ##################################
# System - Warning counter
# ##################################
- alias: system_warning_counter
  id: system_warning_counter
  mode: parallel
  max_exceeded: silent
  trigger:
    - platform: event
      event_type: system_log_event
      event_data:
        level: WARNING
  condition:
    - condition: template
      value_template: "{{ not 'system_warning_counter' in trigger.event.data.message }}"
  action:
    - service: counter.increment
      entity_id: counter.warning_counter

# ##################################
# System - START message
# ##################################
- alias: system_start_message
  id: system_start_message
  initial_state: true
  trigger:
    - platform: homeassistant
      event: start
  action:
    - service: homeassistant.update_entity
      entity_id: 
        - sensor.host_uptime
        - sensor.ha_uptime
        - sensor.start_time
    - service: notify.telegram
      data_template:
        message: "\U0001F603 Сервер({{states('sensor.ha_installed_version')}}) запущен за {{states('sensor.start_time')|int}}сек!"
    - service: script.turn_on
      entity_id: script.system_start
    - service: counter.increment
      entity_id: counter.restart_counter
    
# ##################################
# System - STOP message
# ##################################
- alias: system_stop_message
  id: system_stop_message
  initial_state: true
  mode: restart
  trigger:
    - platform: event
      event_type: homeassistant_stop
    - platform: homeassistant
      event: shutdown
  action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.ha_shutdown
    - service: notify.telegram
      data_template:
        message: "\U0001F621 Сервер остановлен после {{states('sensor.ha_uptime_text').replace('d','д').replace('h','ч').replace('m','м')}} работы!"
        
# ##################################
# System - Github star
# ##################################
- alias: system_github_star
  id: system_github_star
  initial_state: true
  trigger:
    - platform: state
      entity_id: sensor.git_stars
  condition:
    - condition: template
      value_template: >
        {% set ignore = ['unknown', 'unavailable', 'none','0'] %}
        {{ trigger.from_state.state not in ignore and
           trigger.to_state.state not in ignore and
           trigger.to_state.state != trigger.from_state.state }}
  action:
    - service: notify.telegram
      data_template: 
        message: "\U00002b50 GitHub Star -> {{ trigger.to_state.state }}! "

# ##################################
# System - Hass.io NEW Device
# ##################################
- alias: system_new_device_found
  id: system_new_device_found
  initial_state: true
  mode: parallel
  trigger:
    - platform: event
      event_type: device_tracker_new_device
  action:
    - service: notify.telegram
      data_template: 
        message: "\U00002734 Новое устройство: {{ trigger.event.data.host_name if trigger.event.data.host_name is defined else 'NA' }} - ({{ trigger.event.data.entity_id if trigger.event.data.entity_id is defined else 'NA' }})"

# ##################################
# System - Entity Change
# ##################################
- alias: system_entity_change
  id: system_entity_change
  initial_state: true
  mode: parallel
  trigger:
    - platform: event
      event_type: entity_registry_updated
  action:
    - service: notify.telegram
      data_template: 
        message: "\U00002747 {{ trigger.event.data.action | capitalize }}: {{ trigger.event.data.old_entity_id+'->' if trigger.event.data.old_entity_id is defined }}{{ trigger.event.data.entity_id if trigger.event.data.entity_id is defined else 'NA' }}"

# ##################################
# System - Device Deletion
# ##################################
- alias: system_device_entity_deletion
  id: system_device_entity_deletion
  initial_state: true
  mode: parallel
  trigger:
    - platform: event
      event_type: device_registry_updated
  action:
    - service: python_script.exec
      data_template:
        device_id: "{{ trigger.event.data.device_id }}"
        source: |
          registry = hass.data['device_registry']
          device = registry.async_get(data['device_id'])
          if device and device.name_by_user == 'delete':
              registry.async_remove_device(data['device_id'])


# ##################################
# System - Hass.io NEW Version
# ##################################
- alias: system_hassio_new_version
  id: system_hassio_new_version
  initial_state: true
  trigger:
    - platform: state
      entity_id: binary_sensor.updater
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: binary_sensor.update_available 
      from: 'off'
      to: 'on'
  action:
    - service: notify.telegram
      data_template: 
        message: "\U00002733 Hass.io {{states('sensor.ha_latest_version')}} доступен!"

# ##################################
# System - NEW DAY
# ##################################
- alias: system_new_day_telegram
  id: system_new_day_telegram
  initial_state: true
  trigger:
    - platform: time
      at: '00:00:01'
  action:
    - service: notify.telegram
      data_template:
        message: "\U0001F305 Начался новый день! За прошедшие сутки перезагрузок - {{states('counter.restart_counter')|int }}, ошибок - {{states('counter.error_counter')|int }}, предупреждений - {{states('counter.warning_counter')|int}}, ошибок входа - {{states('counter.badlogin_counter')|int}}, ошибок автоматизаций - {{states('counter.automation_error_counter')|int}}. Входная дверь открывалась - {{states('counter.main_door_hb')|int}}раз(а). Чайник включали - {{states('counter.kettle_k')|int}}раз(а)."
    - service: counter.reset
      entity_id: counter.warning_counter, counter.error_counter, counter.restart_counter, counter.badlogin_counter, counter.main_door_hb, counter.automation_error_counter, counter.kettle_k

# ##################################
# System - Weather FCST to Telegram
# ##################################
- alias: system_weather_to_telegram
  id: system_weather_to_telegram
  initial_state: true
  trigger:
    - platform: time
      at: '07:00:00'
    - platform: time
      at: '21:00:00'
  action:
    - service: script.turn_on
      entity_id: script.weather_telegram

# ##################################
# System - login failure message
# ##################################
- alias: system_login_failure
  id: system_login_failure
  initial_state: true
  trigger:
    - platform: state
      entity_id: persistent_notification.http_login
  condition:
    - condition: template
      value_template: "{{ trigger.to_state.state != off }}"
  action:
    - service: counter.increment
      entity_id: counter.badlogin_counter
    - service: notify.telegram
      data_template:
        message: "\U0000274C Неудачная попытка подлючения. Неверно введен пароль! {{ state_attr('persistent_notification.http_login','message') }}"
    - service: persistent_notification.dismiss
      data:
        notification_id: http_login

# ##################################
# System - Zigbee Group Rebuild
# ##################################
- alias: system_zigbee_group_rebuild
  id: system_zigbee_group_rebuild
  initial_state: true
  trigger:
    - platform: time_pattern
      hours: "/1"
  action:
    - service: group.set
      data_template:
        object_id: gw3_zigbee_entities
        entities: >-
          {%-for state in states.sensor if state.entity_id.endswith("_zigbee")%}
          {{ state.entity_id}}{%- if not loop.last -%}, {%- endif -%}
          {%-endfor%}

# ##################################
# System - Sensors Low Battery Notification
# ##################################
- alias: system_low_battery
  id: system_low_battery
  initial_state: true
  trigger:
    - platform: time
      at: "20:30:00"
  action:
    - service: group.set
      data_template:
        object_id: batteries
        entities: >-
          {%-for state in states.sensor if state.entity_id.endswith("_battery")%}
          {{ state.entity_id}}{%- if not loop.last -%}, {%- endif -%}
          {%-endfor%}
    - service: script.turn_on
      entity_id: script.battery_level_check

# ##################################
# System - Switches overheating
# ##################################
# - alias: system_switch_temperature
#   initial_state: true
#   trigger:
#     - platform: time_pattern
#       minutes: "/15"
#   condition: 
#     - condition: template
#       value_template: >
#         {{ ( states.switch | selectattr('attributes.temperature', 'defined') | selectattr('attributes.temperature','>', 65 |int ) | list | count ) >1 }}
#   action:  
#   - service: notify.telegram
#     data_template:
#       message: >
#         {%- set switch_list = states.switch | selectattr('attributes.temperature', 'defined') | selectattr('attributes.temperature','>', 65 |int ) | map(attribute='name') | list | join(', ') -%}
#         {{"\U0001f321"}} Внимание! Высокая температура: {{ switch_list }}


# ##################################
# System - Home weather (ya)
# ##################################
# - alias: system_weather_home
#   initial_state: false
#   trigger:
#     - platform: state
#       entity_id: sensor.ya_weather_home
#   condition:
#     - condition: state
#       entity_id: binary_sensor.tod_day
#       state: 'on'
#   action:
#     - service: notify.telegram_family
#       data_template:
#         message: "\U00002602 Погода дома: {{states('sensor.ya_weather_home')}}"

# ##################################
# System - Database Purge
# ##################################
- alias: system_database_purge
  id: system_database_purge
  initial_state: true
  trigger:
    - platform: time
      at: '02:00:00'
  action:
    - service: recorder.purge
      data:
        keep_days: 8
        repack: true
    - service: notify.telegram
      data_template:
        message: "\U0001f4ab Очистка базы"
        
# ##################################
# System - Transmission completed Torrent
# ##################################
- alias: system_transmission_completed_torrent
  id: system_transmission_completed_torrent
  initial_state: true
  mode: parallel
  trigger:
    - platform: event
      event_type: transmission_downloaded_torrent
  action:
    - service: notify.telegram
      data_template:
        message: "\U0001F4AF Загрузка завершена {{trigger.event.data.name}}"

# ##################################
# System - Telegram message on Config error
# ##################################
- alias: system_config_error_notification
  id: system_config_error_notification
  initial_state: true
  mode: parallel
  trigger:
    - platform: state
      entity_id: 
        - persistent_notification.homeassistant_check_config
        - persistent_notification.invalid_config
      to: 'notifying'
  action:
    - service: notify.telegram
      data_template:
        message: "{{ '\U0000274C' }} Перезапуск отменён. Конфигурация содержит ошибки {{ trigger.to_state.attributes.message }}"
    - service: persistent_notification.dismiss
      data:
        notification_id: >
            {% if 'could not be set up' in trigger.to_state.attributes.message | lower %}
                invalid_config
            {% else %}
                homeassistant_check_config
            {% endif %}        

# ##################################
# System - Pinhole restart
# ##################################
- alias: system_pinhole_restart
  id: system_pinhole_restart
  initial_state: true
  trigger:
    - platform: state 
      entity_id: binary_sensor.pinhole_camera_status
      from: 'on'
      to: 'off'
      for:
        minutes: 3
    - platform: state
      entity_id: device_tracker.door_cam_hb
      from: 'home'
      to: 'not_home'
      for:
        minutes: 3
  action:
    - service: switch.turn_off
      entity_id: switch.0x158d000322e1d9_switch
    - delay: '00:00:05'
    - service: switch.turn_on
      entity_id: switch.0x158d000322e1d9_switch

# ##################################
# System - Digma100 restart
# ##################################
- alias: system_digma100_restart
  id: system_digma100_restart
  initial_state: true
  trigger:
    - platform: state
      entity_id: device_tracker.digma_division_100
      from: 'home'
      to: 'not_home'
      for:
        minutes: 3
    - platform: state 
      entity_id: binary_sensor.digma100_camera_status
      from: 'on'
      to: 'off'
      for:
        minutes: 3
  action:
    - service: switch.turn_off
      entity_id: switch.0x158d000358c773_switch
    - delay: '00:00:15'
    - service: switch.turn_on
      entity_id: switch.0x158d000358c773_switch

# ##################################
# System - HACS Update Available
# ##################################
- alias: system_hacs_update_available
  id: system_hacs_update_available
  initial_state: true
  trigger:
    - platform: state
      entity_id: sensor.hacs
  condition:
    - condition: template
      value_template: >
        {% set ignore = ['unknown', 'unavailable', 'none'] %}
        {{ trigger.from_state.state not in ignore and
           trigger.to_state.state not in ignore and
           trigger.to_state.state != trigger.from_state.state }}
  action:
    - service: notify.telegram
      data_template:
        message: "\U00002b55 HACS - доступны обновления {% for repo in state_attr('sensor.hacs', 'repositories') %}{{ repo.display_name }} ({{ repo['available_version'] }}){%if not loop.last %}, {%endif%}{% endfor %}!"

# ##################################
# System - Supervisor Update Available
# ##################################
- alias: system_supervisor_update_available
  id: system_supervisor_update_available
  initial_state: true
  trigger:
    - platform: state
      entity_id: binary_sensor.updater_supervisor
      from: 'off'
      to: 'on'
  action:
    - service: notify.telegram
      data_template:
        message: "\U0001f6e0 Supervisor - доступна новая версия {{ state_attr('sensor.supervisor_updates', 'newest_version') }}!"

# ##################################
# System - Supervisor Updated
# ##################################
- alias: system_supervisor_updated
  id: system_supervisor_updated
  initial_state: true
  trigger:
    - platform: state
      entity_id: sensor.ha_supervisor_current_version
  condition:
    - condition: template
      value_template: "{{ trigger.from_state.state }} != {{ trigger.to_state.state }}"
  action:
    - service: notify.telegram
      data_template:
        message: "\U0001f6e0 Supervisor обновлен с {{ trigger.from_state.state }} на {{ trigger.to_state.state }}"

# ##################################
# System - Addons Update Available
# ##################################
- alias: system_addons_update_available
  id: system_addons_update_available
  initial_state: true
  trigger:
    - platform: state
      entity_id: binary_sensor.updater_addons
      from: 'off'
      to: 'on'
  condition:
    - condition: template
      value_template: "{{ states('sensor.supervisor_updates')|int >0 }}"
  action:
    - service: notify.telegram
      data_template:
        message: "\U0001f530 Addons - доступно обновлений {{ states('sensor.supervisor_updates') }}!"
#{% for repo in state_attr('sensor.hacs', 'repositories') %}{{ repo.display_name }} ({{ repo['available_version'] }}){%if not loop.last %}, {%endif%}{% endfor %}

# ##################################
# System - System Automation Errors
# ##################################
- alias: system_automation_error
  id: system_automation_error
  initial_state: true
  mode: parallel
  trigger:
    - platform: event
      event_type: system_log_event
      event_data:
        level: ERROR
  condition:
    - condition: template
      value_template: "{{ 'Error while executing automation' in trigger.event.data.message or 'Error executing script' in trigger.event.data.message }}"
    - condition: template
      value_template: "{{ not 'automation.system_automation_error' in trigger.event.data.message }}"
  action:
    - service: notify.telegram
      data_template:
        message: |
          {{ '\U0000274C' }} Ошибка выполнения автоматизации: 
          {{ trigger.event.data.message }}.
    - service: counter.increment
      data:
        entity_id: counter.automation_error_counter

# ##################################
# System - System Errors per hour
# ##################################
- alias: system_error_per_hour
  id: system_error_per_hour
  initial_state: true
  mode: parallel
  trigger:
    - platform: numeric_state
      entity_id: sensor.error_counter_hourly
      above: 100
  condition:
    - condition: template
      value_template: "{{(as_timestamp(now())-as_timestamp(state_attr('automation.system_error_per_hour','last_triggered'))|int) > 15 }}"
    - condition: template
      value_template: "{{ (states('sensor.error_counter_hourly')|int % 50) == 0 }}"      
  action:
    - service: notify.telegram
      data_template:
        message: "\U000026a0 Внимание! Количество ошибок в час выросло до {{states('sensor.error_counter_hourly')|int}}"

# ##################################
# System - Servers Plugs turn on
# ##################################
- alias: system_servers_plugs_restore
  id: system_servers_plugs_restore
  initial_state: true
  trigger:
    - platform: state
      entity_id: 
        #- switch.shp6_socket_1_relay
        - switch.shp2_socket_2_relay
        #- switch.shp2_socket_1_relay
      from: 'on'
      to: 'off'
      for:
        seconds: 30
  action:
    - service: switch.turn_on
      data_template: 
        entity_id: "{{ trigger.to_state.entity_id }}"
    - service: notify.telegram
      data_template:
        message: "\U0001f525 Перезапуск розетки {{ trigger.to_state.entity_id }} !"

# ##################################
# System - Mopidy restart
# ##################################
- alias: system_mopidy_restart
  id: system_mopidy_restart
  initial_state: true
  trigger:
    - platform: state
      entity_id: media_player.mpd
      to: 'unavailable'
      for: '00:00:05'
    # - platform: time
    # at: "15:32:00"
  condition: 
  action:  
    - service: hassio.addon_restart
      data:
        addon: 40817795_mopidy

# ##################################
# System - IP Blocked
# ##################################
- alias: system_blocked_ip
  id: system_blocked_ip
  initial_state: true
  trigger:
    - platform: state
      entity_id: persistent_notification.ip_ban
  action:
    - service: input_text.set_value
      data_template: 
        entity_id: input_text.ip_ban
        value: "{{ state_attr('persistent_notification.ip_ban', 'message').split('Too many login attempts from ')[1] }}"
    - delay: '00:00:01'
    - service: notify.telegram
      data_template:
        message: "\U000026d4 Слишком много попыток некорректного входа. Заблокирован IP: http://whatismyipaddress.com/ip/{{ states('input_text.ip_ban') }}."

# ##################################
# System - Rain sensor
# ##################################
# - alias: system_rain_sensor
#   initial_state: false
#   trigger:
#     - platform: state
#       entity_id: binary_sensor.0x158d00035c6905_contact
#       from: 'on'
#       to: 'off'
#       for: '00:05:00'
#     - platform: state
#       entity_id: binary_sensor.0x158d00035c6905_contact
#       from: 'off'
#       to: 'on'
#       for: '00:05:00'
#   condition:
#     - condition: template
#       value_template: >
#         {% set ignore = ['unknown', 'unavailable', 'none'] %}
#         {{ trigger.from_state.state not in ignore and
#           trigger.to_state.state not in ignore and
#           trigger.to_state.state != trigger.from_state.state }}
#   action:
#     - service: notify.telegram
#       data_template:
#         message: >
#           {% if is_state('binary_sensor.0x158d00035c6905_contact','on') %} {{"\U0001f327"}} Кажется дождь собирается!
#           {% else %} {{"\U0001f324"}} Тучки уходят!
#           {% endif %}

# ##################################
# System - Critical Error notification
# ##################################
- alias: system_critical_error_notify
  id: system_critical_error_notify
  initial_state: true
  mode: parallel
  trigger:
    - platform: event
      event_type: system_log_event
      event_data:
        level: FATAL
    - platform: event
      event_type: system_log_event
      event_data:
        level: CRITICAL
  action:
    - service: notify.telegram
      data_template:
        message: "\U0001f534 Критическая ошибка системы: {{ trigger.event.data.message }}!"
        
# ##################################
# System - Radiation alert
# ##################################
- alias: system_radiation_alert
  id: system_radiation_alert
  initial_state: true
  trigger:
    - platform: state
      entity_id: sensor.geiger_action
      to: 'on'
    - platform: numeric_state
      entity_id: sensor.geiger_radiation_dose_per_hour
      above: 100
  action:
    - service: notify.telegram
      data_template:
        message: "\U00002622 Внимание! Радиоактивный фон превышен {{states('sensor.geiger_radiation_dose_per_hour')|int}}мкР/ч!"
        
# ##################################
# System - Silent Mode Toggle
# ##################################
- alias: system_silent_mode_toggle
  id: system_silent_mode_toggle
  initial_state: true
  trigger:
    - platform: state
      entity_id: input_boolean.silent_mode
      from: 'on'
      to: 'off'
    - platform: state
      entity_id: input_boolean.silent_mode
      from: 'off'
      to: 'on'
  action:
    - service: switch.turn_{{states('input_boolean.silent_mode')}}
      entity_id: switch.esp32_domofon_mute
    - service: input_number.set_value
      data_template:
        entity_id: input_number.main_volume
        value: "{% if is_state('input_boolean.silent_mode','on') %}0{%else%}0.3{%endif%}"
    - service: notify.telegram
      data_template:
        message: >
          {% if is_state('input_boolean.silent_mode','on') %}
            {{'\U0001f515'}} Звуки выключены
          {%else%}
            {{'\U0001f514'}} Звуки включены
          {%endif%}
          
# ##################################
# System - HP 178 Toner Level
# ##################################
- alias: system_printer_toner_level
  id: system_printer_toner_level
  initial_state: true
  trigger:
    - platform: numeric_state
      entity_id:
        - sensor.hp_178nw_black
        - sensor.hp_178nw_cyan
        - sensor.hp_178nw_magenta
        - sensor.hp_178nw_yellow
      below: 30
  action:
    - service: notify.telegram
      data_template:
        message: "\U0001f5a8 Внимание! Необходимо заказать картриджи. B {{states('sensor.hp_178_black')|int}}%, C {{states('sensor.hp_178_cyan')|int}}%, M {{states('sensor.hp_178_magenta')|int}}%, Y {{states('sensor.hp_178_yellow')|int}}%"

# ##################################
# System - GW3 State
# ##################################
- alias: system_gw3_state
  id: system_gw3_state
  initial_state: true
  mode: queued
  trigger:
    - platform: state
      entity_id:
        - remote.0x588e81fffedcb38d_pair
        - remote.0x842e14fffe1508a6_pair
        - remote.0x588e81fffedd3c41_pair
        - remote.0x588e81fffe72678e_pair
        - remote.0xbc33acfffe537cf5_pair
    - platform: state
      entity_id:
        - sensor.0x588e81fffe72678e_gateway
        - sensor.0x588e81fffedcb38d_gateway
        - sensor.0x588e81fffedd3c41_gateway
        - sensor.0x842e14fffe1508a6_gateway
        - sensor.0xbc33acfffe537cf5_gateway
      to: 'unknown'
    - platform: state
      entity_id:
        - sensor.0x588e81fffe72678e_gateway
        - sensor.0x588e81fffedcb38d_gateway
        - sensor.0x588e81fffedd3c41_gateway
        - sensor.0x842e14fffe1508a6_gateway
        - sensor.0xbc33acfffe537cf5_gateway
      from: 'unknown'
  condition:
    - condition: template
      value_template: "{{ trigger.to_state.state != trigger.from_state.state }}"
  action:
    - service: notify.telegram
      data_template:
        #message: "\U00002699 {{trigger.to_state.attributes.friendly_name}}: {{trigger.from_state.state}} -> {{trigger.to_state.state}}"
        message: "\U00002699 {{trigger.to_state.attributes.friendly_name}}: {% if trigger.from_state.state in ['on','off','unknown','unavailable'] %}{{trigger.from_state.state}}{%else%}online{%endif%} -> {% if trigger.to_state.state in ['on','off','unknown','unavailable'] %}{{trigger.to_state.state}}{%else%}online{%endif%}"
          
# ##################################
# System - GW3 Connection lost
# ##################################
# - alias: system_gw3_connection
#   initial_state: true
#   mode: parallel
#   trigger:
#     - platform: state
#       entity_id:
#         - binary_sensor.gw3_hb_state_3
#         - binary_sensor.gw3_hs_state_3
#         - binary_sensor.gw3_s_state_3
#       # to: 'off'
#       # for:
#       #   minutes: 5
#   action:
#     - service: notify.telegram
#       data_template:
#         message: "\U0001f6a9 {{trigger.to_state.attributes.friendly_name }} {{trigger.from_state.state}} -> {{trigger.to_state.state}}"

# ##################################
# System - Watchdog
# ##################################
- alias: system_watchdog
  id: system_watchdog
  initial_state: true
  mode: parallel
  trigger:
    - platform: state
      entity_id: binary_sensor.0x158d000323c87c_contact
      for:
        seconds: 2
  action:
    - service: notify.telegram
      data_template:
        message: "\U000026A0 Watchdog: API {%if is_state('binary_sensor.0x158d000323c87c_contact','off') %}Connected{%else%}Disconnected{%endif%}!"
        
# ##################################
# System - Dark Mode
# ##################################
- alias: system_dark_mode
  id: system_dark_mode
  initial_state: true
  trigger:
    - platform: state
      entity_id: input_boolean.dark_mode
  action:
    - service: notify.telegram
      data_template:
        message: >
          {% if is_state('input_boolean.dark_mode','on') %}
            {{'\U0001f318'}} Режим темноты включен
          {%else%}
            {{'\U00002600'}} Режим темноты выключен
          {%endif%}
          
# ##################################
# System - HACS Update Pending
# ##################################
- alias: system_hacs_update_pending
  id: system_hacs_update_pending
  initial_state: true
  trigger:
    - platform: state
      entity_id: sensor.hacs
  condition:
    - condition: template
      value_template: "{{ states(trigger.entity_id) != 'unknown'}}"
    - condition: template
      value_template: "{{ (states(trigger.entity_id) | float) != 0}}"
  action:
    - service: persistent_notification.create
      data_template:
        title: Updates pending in HACS
        message: >-
          {% for repo in state_attr(trigger.entity_id, 'repositories') %}
            {{ repo.display_name }} _{{ repo["installed_version"] }}_ -> _{{ repo["available_version"] }}_
          {% endfor %}

# ##################################
# System - HACS New Repo
# ##################################
# - alias: system_hacs_new_repo
#   initial_state: false
#   trigger:
#     - platform: event
#       event_type: hacs/repository
#       event_data:
#         action: registration
#   condition:
#     - condition: template
#       value_template: "{{ trigger.event.data.repository is defined }}"
#   action:
#     - service: persistent_notification.create
#       data_template:
#         title: New repository in HACS
#         message: >-
#           {% set repo = trigger.event.data.repository %}
#           {% set id = trigger.event.data.repository_id %}
#           [{{ repo }}](/hacs/repository/{{ id }})
#           was just added to HACS.
        
# ##################################
# System - Hot water pipe warning
# ##################################
- alias: system_hot_water_pipe
  id: system_hot_water_pipe
  initial_state: true
  trigger:
    - platform: numeric_state
      entity_id: sensor.esp32_bathroom_node_hot_pipe
      below: 40
      for:
        minutes: 5
  action:
    - service: notify.telegram
      data_template:
        message: "\U0001f321 Внимание! Температура трубы горячей воды ниже 40°C"

# ##################################
# System - Cold water pipe warning
# ##################################
- alias: system_cold_water_pipe
  id: system_cold_water_pipe
  initial_state: true
  trigger:
    - platform: numeric_state
      entity_id: sensor.esp32_bathroom_node_cold_pipe
      above: 25
      for:
        minutes: 5
  action:
    - service: notify.telegram
      data_template:
        message: "\U0001f321 Внимание! Температура трубы холодной воды выше {{states('sensor.esp32_bathroom_node_cold_pipe')|int}}°C"

# ##################################
# System - Heating pipes warning
# ##################################
- alias: system_heating_pipes_warning
  id: system_heating_pipes_warning
  initial_state: true
  trigger:
    - platform: numeric_state
      entity_id: 
        - sensor.esp32_node_v_heating_pipe
        - sensor.esp32_node_mb_heating_pipe
      below: 30
      for:
        minutes: 5
  action:
    - service: notify.telegram
      data_template:
        message: "\U0001f321 Внимание! Температура трубы {{trigger.to_state.attributes.friendly_name}} ниже 30°C"
        
# ##################################
# System - ZB Devices Status
# ##################################
- alias: system_zb_devices_status
  id: system_zb_devices_status
  initial_state: true
  mode: queued
  trigger:
    - platform: state
      entity_id:
        - sensor.0x158d00013e6aa5_action
        - sensor.0x158d00016bdb4a_action
        - sensor.0x158d0001712d55_action
        - sensor.0x158d00019c8afd_action
        - binary_sensor.0x158d0001ae9f61_motion
        - binary_sensor.0x158d0001aea602_motion
        - sensor.0x158d0001b94abe_action
        - sensor.0x158d0001b97111_action
        - binary_sensor.0x158d0001d5995e_motion
        - binary_sensor.0x158d0001e05856_motion
        - sensor.0x158d0001e0784e_action
        - sensor.0x158d0001e0a622_action
        - binary_sensor.0x158d0001e53cda_motion
        - binary_sensor.0x158d0001e54280_motion
        - sensor.0x158d0001e586af_temperature
        - sensor.0x158d0001e58714_temperature
        - sensor.0x158d0001e58754_temperature
        - binary_sensor.0x158d0001e5d6be_contact
        - sensor.0x158d0001e6d85a_temperature
        - switch.0x158d0001e85086_switch
        #- sensor.0x158d0001e8995a_temperature
        - binary_sensor.0x158d0001ef2ffc_contact
        - sensor.0x158d0001ef6089_action
        - sensor.0x158d0001ef609b_action
        - sensor.0x158d0001ef61be_action
        - switch.0x158d0001f2630e_switch
        - sensor.0x158d0001f3627d_action
        - binary_sensor.0x158d000200ad58_contact
        - switch.0x158d000205a835_switch
        - sensor.0x158d00020d7c3a_temperature
        - sensor.0x158d000222c746_temperature
        - sensor.0x158d000223921b_action
        - binary_sensor.0x158d000224f89f_motion
        - binary_sensor.0x158d00022ccffe_contact
        - switch.0x158d000230fc52_switch
        - binary_sensor.0x158d00023297e7_moisture
        - binary_sensor.0x158d000232ddd6_contact
        - binary_sensor.0x158d000232de79_contact
        - sensor.0x158d000233fb72_temperature
        - binary_sensor.0x158d00023684c2_moisture
        - binary_sensor.0x158d000236bb94_motion
        - binary_sensor.0x158d000236bc6d_motion
        - binary_sensor.0x158d000236fcd5_contact
        - binary_sensor.0x158d000236fdc9_contact
        - sensor.0x158d000237167c_temperature
        - binary_sensor.0x158d0002373a67_moisture
        - switch.0x158d000239097a_switch
        - switch.0x158d0002395d58_switch
        - switch.0x158d0002395dc9_switch
        - sensor.0x158d000239ad5b_temperature
        - switch.0x158d00023a657a_switch
        - sensor.0x158d00023d0b86_action
        - sensor.0x158d00023d3116_action
        - sensor.0x158d00023d3206_action
        - switch.0x158d00023e5812_switch
        - sensor.0x158d00023e5f2a_action
        - switch.0x158d00024517fe_switch
        - switch.0x158d0002451850_switch
        - sensor.0x158d0002461e5b_temperature
        - sensor.0x158d0002464ec0_temperature
        - switch.0x158d000246776f_switch
        - switch.0x158d0002467773_switch
        - switch.0x158d0002468fbd_switch
        - switch.0x158d0002476ed1_switch
        - switch.0x158d0002482619_switch
        - switch.0x158d000249b25b_switch
        - switch.0x158d000249b26b_switch
        - binary_sensor.0x158d00024bcf85_gas
        - binary_sensor.0x158d0002529b9c_contact
        - binary_sensor.0x158d000252acba_contact
        - binary_sensor.0x158d00025315e9_contact
        - binary_sensor.0x158d0002531749_contact
        - binary_sensor.0x158d00025370d1_contact
        - binary_sensor.0x158d00025371f6_contact
        - binary_sensor.0x158d000253722b_contact
        - sensor.0x158d000253f04a_action
        - sensor.0x158d00026ea94e_action
        - sensor.0x158d00026eb820_action
        - binary_sensor.0x158d00027129ae_contact
        - switch.0x158d00028a54e4_switch
        - switch.0x158d00028b4fc3_switch
        - switch.0x158d00028c9875_switch
        - switch.0x158d000290a093_switch
        - switch.0x158d000290a0bc_switch
        - switch.0x158d0002924790_switch
        - binary_sensor.0x158d0002a14c5e_contact
        - binary_sensor.0x158d0002a1a47a_contact
        - binary_sensor.0x158d0002a1a4b2_contact
        - sensor.0x158d0002a2412d_action
        - sensor.0x158d0002a36433_action
        - sensor.0x158d0002a36f7f_action
        - binary_sensor.0x158d0002b43ad4_motion
        - binary_sensor.0x158d0002b4729d_motion
        - binary_sensor.0x158d0002b482e9_motion
        - binary_sensor.0x158d0002b48381_motion
        - sensor.0x158d0002b5fbc1_action
        - binary_sensor.0x158d0002b7c2c8_contact
        - binary_sensor.0x158d0002c92f31_smoke
        - light.0x158d0002d3f7c9_light
        - sensor.0x158d0002f8dd54_action
        - sensor.0x158d0002fa99a8_action
        - binary_sensor.0x158d0003140824_motion
        - switch.0x158d000322e1d9_switch
        - switch.0x158d000322e30c_switch
        - binary_sensor.0x158d000323c87c_contact
        - binary_sensor.0x158d0003262a35_contact
        - binary_sensor.0x158d0003262ba8_contact
        - switch.0x158d000344998e_switch
        - switch.0x158d000345119e_switch
        - switch.0x158d0003535ee5_switch
        - switch.0x158d0003539447_switch
        - switch.0x158d000353a2e3_switch
        - switch.0x158d000358c773_switch
        - switch.0x158d00035c194f_switch
        - binary_sensor.0x158d00035c6905_contact
        - switch.0x158d00035f44a7_switch
        - switch.0x158d0003600ea4_switch
        - switch.0x158d00036148b9_switch
        - sensor.0x158d000366815b_action
        - switch.0x158d00039258de_switch
        - switch.0x158d000392623d_switch
        - sensor.0x158d0003991051_action
        - switch.0x158d00039bd56d_switch
        - binary_sensor.0x158d0003fa6cf5_contact
        - binary_sensor.0x158d000423f316_contact
        - sensor.0x4cf8cdf3c77271d_illuminance
        - sensor.0x4cf8cdf3c78d26e_illuminance
        - sensor.0x4cf8cdf3c7947e4_action
        - sensor.0x4cf8cdf3c79546c_action
        - sensor.0x4cf8cdf3c7a9a48_action
        - alarm_control_panel.0x588e81fffe72678e_alarm
        - alarm_control_panel.0x588e81fffedcb38d_alarm
        - alarm_control_panel.0x588e81fffedd3c41_alarm
        - alarm_control_panel.0x842e14fffe1508a6_alarm
        - alarm_control_panel.0xbc33acfffe537cf5_alarm
        - sensor.geiger_radiation_dose_per_hour
        - sensor.0x4cf8cdf3c7754a8_illuminance
      to: 'unavailable'
  condition:
    - condition: state
      entity_id: input_boolean.ha_shutdown
      state: 'off'
  action:
    - choose:
        - conditions: "{{ states('input_boolean.ha_shutdown') == 'off' }}"
          sequence:
            - service: notify.telegram
              data_template:
                message: "\U0001f4a5 ZB: {{trigger.to_state.attributes.friendly_name}}: {{trigger.from_state.state}} -> {{trigger.to_state.state}}"

# ##################################
# System - ZB Devices Status
# ##################################
- alias: system_zb_devices_status_2
  id: system_zb_devices_status_2
  initial_state: true
  mode: queued
  trigger:
    - platform: event
      event_type: state_changed
  condition:
    - condition: state
      entity_id: input_boolean.ha_shutdown
      state: 'off'
    - condition: template
      value_template: >-
        {{ trigger.event.data.entity_id in ['gw3_zigbee_entities'] }}
    - condition: template
      value_template: >-
        {{ trigger.event.data.new_state.state != trigger.event.data.old_state.state }}
    - condition: template
      value_template: >-
        {{ trigger.event.data.new_state.state in ['unknown', 'unavailable'] }}
  action: 
    - service: notify.telegram
      data_template:
        message: "\U0001f4a5 ZB_group: {{trigger.event.data.attributes.friendly_name.split(' Zigbee')[0]}}: {{trigger.event.data.old_state.state}} -> {{trigger.event.data.new_state.state}}"

# ##################################
# System - ZB Devices Status Normal
# ##################################
- alias: system_zb_devices_status_normal
  id: system_zb_devices_status_normal
  initial_state: true
  mode: queued
  trigger:
    - platform: numeric_state
      entity_id: sensor.zigbee_devices_unavailable
      below: 1
  action: 
    - service: notify.telegram
      data_template:
        message: "\U00002705 ZB: Все устройства онлайн!"

# ##################################
# System - ESP Devices Status
# ##################################
- alias: system_esp_devices_status
  id: system_esp_devices_status
  initial_state: true
  mode: queued
  trigger:
    - platform: state
      entity_id: 
        - binary_sensor.btf_pixel_strip_status
        - binary_sensor.d1mini_bed_leds_status
        - binary_sensor.d1mini_co2_s_status
        - binary_sensor.digma_ir_mb_status
        - binary_sensor.digma_ir_s_status
        - binary_sensor.digma_ir_v_status
        - binary_sensor.esp01_weight_pad_status
        - binary_sensor.esp32_bathroom_node_status
        - binary_sensor.esp32_ble_tracker_status
        - binary_sensor.esp32_domofon_status
        - binary_sensor.esp32_node_k_status
        - binary_sensor.esp32_node_mb_status
        - binary_sensor.esp32_node_v_status
        - binary_sensor.esp8266_oven_temp_k_status
        - binary_sensor.esp8266_pzem_hb_status
        - binary_sensor.esp8266_test_status
        - binary_sensor.shp2_socket_1_status
        - binary_sensor.shp2_socket_2_status
        - binary_sensor.shp2_socket_server_status
        - binary_sensor.shp6_socket_1_status
        - binary_sensor.shp6_socket_2_status
        - binary_sensor.sonoff_basic_3_status
        - binary_sensor.sonoff_basic_4_status
        - binary_sensor.sonoff_mini_2_status
        - binary_sensor.sonoff_pow_r2_1_status
        - binary_sensor.ss5_hood_status
      to: 'off'
      for:
        minutes: 2
  action: 
    - service: notify.telegram
      data_template:
        message: "\U0001f4f6 ESP: {{trigger.to_state.attributes.friendly_name}}: {{trigger.from_state.state}} -> {{trigger.to_state.state}}"

# ##################################
# System - Weather Geomagnetic
# ##################################
# - alias: system_weather_geomagnetic
#   initial_state: false
#   trigger:
#     - platform: time_pattern
#       hours: "/1"
#   condition:
#     - condition: state
#       entity_id: binary_sensor.tod_day
#       state: "on"
#     - condition: template
#       value_template: "{{(as_timestamp(now())|int - as_timestamp(states.sensor.sensor.gismeteo_geomagnetic_field.last_changed)|int) < 60*60 }}"
#   action:
#     - service: notify.telegram
#       data_template:
#         message: >-
#           {% set magnetic_conditions = ['Норма','Небольшие возмущения','Небольшие возмущения','Небольшие возмущения','Слабая буря','Умеренная буря','Сильная буря','Шторм','Экстремальный шторм'] %}
#           {{ "\U0001f9f2" }} Геомагнитная обстановка -> {{magnetic_conditions[states('sensor.gismeteo_geomagnetic_field')|int]}}

# ##################################
# System - Caller ID
# ##################################
- alias: system_caller_id
  id: system_caller_id
  initial_state: true
  trigger:
    - platform: state
      entity_id: sensor.modem_callerid
  condition:
    - condition: template
      value_template: "{{ trigger.to_state.state in ['callerid', 'ring'] }}"
  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: sensor.modem_callerid
              state: "callerid"
          sequence:
            - service: notify.telegram
              data_template:
                message: "\U0000260e Звонок на городской телефон с номера {{ state_attr('sensor.modem_callerid', 'cid_number') }}"
        - conditions:
            - condition: state
              entity_id: sensor.modem_callerid
              state: "ring"
          sequence:
            - service: notify.telegram
              data_template:
                message: "\U0000260e Звонок на городской телефон!"

# ##################################
# System - GW3 Error
# ##################################
- alias: system_xiaomi_gw3_error
  id: system_xiaomi_gw3_error
  initial_state: true
  mode: queued
  trigger:
    - platform: event
      event_type: system_log_event
      event_data:
        level: ERROR
  condition:
    - condition: template
      value_template: '{{ "xiaomi_gateway3" in trigger.event.data.message[0] or "xiaomi_gateway3" in trigger.event.data.source[0] }}'
  action:
    - service: notify.telegram
      data_template:
        message: "\U000026d4 GW3 Ошибка обнаружена в логе!"

# ##################################
# System - Already running log
# ##################################
- alias: system_already_running_log
  id: system_already_running_log
  initial_state: true
  mode: queued
  trigger:
    - platform: event
      event_type: system_log_event
      event_data:
        level: WARNING
  condition:
    - condition: template
      value_template: '{{ "Already running" in trigger.event.data.message[0] }}'
  action:
    - service: notify.telegram
      data_template:
        message: "\U000026d4 Warning! {{trigger.event.data.message[0]}}"

# ##################################
# System - Automation Reload
# ##################################
- alias: system_automation_reload
  id: system_automation_reload
  initial_state: true
  trigger:
    # - platform: event
    #   event_type: call_service
    #   event_data:
    #     domain: automation
    #     service: reload
    - platform: event
      event_type: automation_reloaded
  action:
    - service: notify.telegram
      data_template:
        message: "\U0001f4ac Автоматизации перезагружены!"

# ##################################
# System - Printer weekly restart
# ##################################
# - alias: system_printer_weekly_restart
#   initial_state: true
#   trigger:
#     - platform: time
#       at: '06:59:00'
#   condition:
#     - condition: time
#       weekday:
#         - mon
#     - condition: state
#       entity_id: input_boolean.security_mode
#       state: 'off'
#   action:
#     - service: switch.turn_off
#       entity_id: switch.0x158d00028b4fc3_switch
#     - delay: '00:00:15'
#     - service: switch.turn_on
#       entity_id: switch.0x158d00028b4fc3_switch
#     - delay: '00:00:45'
#     - service: notify.telegram
#       data_template:
#         message: "\U000026a0 Не забудьте включить принтер!"

# ##################################
# System - Printer offline
# ##################################
- alias: system_printer_offline
  id: system_printer_offline
  initial_state: true
  trigger:
    - platform: state
      entity_id: sensor.hp_color_laser_mfp_178nw
      to: 'unavailable'
      for: '00:01:00'
  action:
    - service: notify.telegram
      data_template:
        message: "\U000026a0 Принтер не в сети! Проверьте питание!"

# ##################################
# System - GW3 Devices Group Renewal
# ##################################
# - alias: system_gw3_devices_group_renewal
#   initial_state: true
#   trigger:
#     - platform: time_pattern
#       minutes: '/30'
#   action:
#     - service: group.set
#       data_template:
#         object_id: gw3_devices
#         entities: >-
#           {%-for state in states if ("0x" in state.entity_id and "_zigbee" not in state.entity_id and "_power" not in state.entity_id and "_consumption" not in state.entity_id and "_battery" not in state.entity_id and "_humidity" not in state.entity_id and "_density" not in state.entity_id and "_illuminance" not in state.entity_id and "_pressure" not in state.entity_id and "_gateway" not in state.entity_id and "_firmware_lock" not in state.entity_id and "_pair" not in state.entity_id )%}
#           {{ state.entity_id}}{%- if not loop.last -%}, {%- endif -%}
#           {%-endfor%}

# ##################################
# System - Device Stats
# ##################################
- alias: system_devices_stats
  id: system_devices_stats
  initial_state: true
  trigger:
    - platform: time
      at: '00:00:30'
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.breather_v_run_time
        value: "{{ (states('input_number.breather_v_run_time') | float + states('sensor.breather_v_run_time_yesterday') | float) | round(2) }}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.breather_s_run_time
        value: "{{ (states('input_number.breather_s_run_time') | float + states('sensor.breather_s_run_time_yesterday') | float) | round(2) }}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.breather_mb_run_time
        value: "{{ (states('input_number.breather_mb_run_time') | float + states('sensor.breather_mb_run_time_yesterday') | float) | round(2) }}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.washer_b_run_time
        value: "{{ (states('input_number.washer_b_run_time') | float + states('sensor.washer_b_run_time_yesterday') | float) | round(2) }}"
    - service: notify.telegram
      data_template:
        message: "\U0001f9ed Статистика использования устройств обновлена!"

# ##################################
# System - AC Power Status
# ##################################
- alias: system_ac_power_status
  id: system_ac_power_status
  initial_state: true
  trigger:
    - platform: state
      entity_id: binary_sensor.0x158d0003262acc_contact
      to: 'on'
      from: 'off'
    - platform: state
      entity_id: binary_sensor.0x158d0003262acc_contact
      to: 'off'
      from: 'on'
  action:
    - service: notify.telegram
      data_template:
        message: >
          {% if is_state('binary_sensor.0x158d0003262acc_contact','on') %}{{'\U00002705'}} Электроснабжение восстановлено!"
          {% else %}{{'\U0000274c'}} Внимание! Электроснабжение прекращено!
          {%endif%}
