substitutions:
  board_name: shp2_socket_server
  current_res: "0.00218"
  voltage_div: "905"

esphome:
  name: ${board_name}
  platform: ESP8266
  board: esp8285
  on_boot:
    priority: -10
    then:
      - switch.turn_on: relay

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass
  #domain: .local
  reboot_timeout: 15min
  #output_power: 17.5dB
  fast_connect: true
  #power_save_mode: none
  manual_ip:
    static_ip: 192.168.1.58
    gateway: 192.168.1.1
    subnet: 255.255.255.0
    dns1: 192.168.1.1
    dns2: 8.8.8.8

logger:

api:
  reboot_timeout: 0s

ota:

web_server:
  port: 80

binary_sensor:
  - platform: status
    name: ${board_name}_Status
    
  - platform: gpio
    name: ${board_name}_Button
    pin:
      number: GPIO3
      mode: INPUT_PULLUP
      inverted: True
    on_press:
      - switch.toggle: relay

switch:
  - platform: gpio
    name: ${board_name}_Relay
    pin: GPIO14
    id: relay
    restore_mode: ALWAYS_ON
    on_turn_on:
      - switch.turn_on: blue_led
      - switch.turn_off: red_led
    on_turn_off:
      - switch.turn_off: blue_led
      - switch.turn_on: red_led

  - platform: gpio
    id: blue_led
    name: ${board_name}_LED_Blue
    icon: mdi:led-on
    restore_mode: ALWAYS_ON
    pin: 
      number: GPIO1
      inverted: True

  - platform: gpio
    id: red_led
    name: ${board_name}_LED_Red
    icon: mdi:led-on
    restore_mode: ALWAYS_OFF
    pin: 
      number: GPIO13
      inverted: True

sensor:
  - platform: hlw8012
    sel_pin: 
      number: GPIO12
      inverted: True
    cf_pin: GPIO04
    cf1_pin: GPIO05
    current_resistor: ${current_res}
    voltage_divider: ${voltage_div}
    current:
      name: ${board_name}_A
      icon: mdi:current-ac
      unit_of_measurement: A
      device_class: current
    voltage:
      name: ${board_name}_V
      icon: mdi:flash-circle
      unit_of_measurement: V
      device_class: voltage
    power:
      name: ${board_name}_W
      icon: mdi:flash
      unit_of_measurement: W
      device_class: power
    energy:
      name: ${board_name}_E
      icon: mdi:lightning-bolt
      unit_of_measurement: kWh
      device_class: energy
      filters:
        - multiply: 0.001
    change_mode_every: 3
    update_interval: 10s
 
  - platform: uptime
    name: ${board_name}_Uptime_s
    id: uptime_sensor

  - platform: wifi_signal
    name: ${board_name}_WiFi_RSSI
    update_interval: 60s

text_sensor:
  - platform: template
    name: ${board_name}_Uptime
    lambda: |-
        int seconds = round(id(uptime_sensor).raw_state);
        int days = seconds / (24 * 3600);
        seconds = seconds % (24 * 3600);
        int hours = seconds / 3600;
        seconds = seconds % 3600;
        int minutes = seconds /  60;
        seconds = seconds % 60;
        return (
          (days ? to_string(days) + "d " : "00d ") +
          (hours ? to_string(hours) + "h " : "00h ") +
          (minutes ? to_string(minutes) + "m " : "00m ") +
          (to_string(seconds) + "s")
        );
    icon: mdi:clock-start
    update_interval: 15s

time:
  - platform: homeassistant
    id: homeassistant_time