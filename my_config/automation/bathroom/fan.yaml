# #####################################################################################
#
# BATHROOM
#
# #####################################################################################
# Bathroom Fan - On Manual Single
# ##################################
- alias: bathroom_button_b_single
  initial_state: true
  trigger:
    # - platform: state
    #   entity_id: sensor.0x158d0001b94abe_action
    #   to: 'single'
    - platform: event
      event_type: xiaomi_aqara.click
      event_data:
        entity_id: sensor.0x158d0001b94abe_action
        click_type: single
  action:
    - choose:
        - conditions:
            - condition: template
              value_template: "{{ is_state('light.mirror_light_b','off') and is_state('switch.0x158d0002a36433_channel_2','off') }}"
          sequence:
            - service: xiaomi_miio.light_set_scene
              data:
                entity_id: light.mirror_light_b
                scene: 4
        - conditions:
            - condition: state
              entity_id: switch.esp32_bathroom_node_relay_3
              state: 'off'
            - condition: template
              value_template: "{{ is_state('light.mirror_light_b','on') or is_state('switch.0x158d0002a36433_channel_2','on') }}"
          sequence:
            - service: switch.turn_on
              entity_id: switch.esp32_bathroom_node_relay_3
            - service: timer.cancel
              entity_id: timer.fan_b
            - service: timer.start
              entity_id: timer.fan_b
        - conditions:
            - condition: state
              entity_id: switch.esp32_bathroom_node_relay_3
              state: 'on'
            - condition: template
              value_template: "{{ is_state('light.mirror_light_b','on') or is_state('switch.0x158d0002a36433_channel_2','on') }}"
          sequence:
            - service: switch.turn_off
              entity_id: switch.esp32_bathroom_node_relay_3
            - service: timer.cancel
              entity_id: timer.fan_b

# ##################################
# Bathroom Fan - On Manual Double
# ##################################
- alias: bathroom_button_b_double
#  id: bathroom_button_b_double
  initial_state: true
  trigger:
    # - platform: state
    #   entity_id: sensor.0x158d0001b94abe_action
    #   to: 'double'
    - platform: event
      event_type: xiaomi_aqara.click
      event_data:
        entity_id: sensor.0x158d0001b94abe_action
        click_type: double
  action:
    - choose:
        - conditions:
            - condition: template
              value_template: "{{ is_state('light.mirror_light_b','off') and is_state('switch.0x158d0002a36433_channel_2','off') }}"
          sequence:
            - service: xiaomi_miio.light_set_scene
              data:
                entity_id: light.mirror_light_b
                scene: 1
        - conditions:
            - condition: template
              value_template: "{{ is_state('light.mirror_light_b','on') or is_state('switch.0x158d0002a36433_channel_2','on') }}"
          sequence:
            - service: switch.turn_{%if is_state('switch.sonoff_pow_r2_1_bottom_fan','on')%}off{%else%}on{%endif%} #service: switch.toggle
              entity_id: switch.sonoff_pow_r2_1_bottom_fan

# ##################################
# Bathroom Fan - On Manual Hold
# ##################################
- alias: bathroom_button_b_hold
#  id: bathroom_button_b_hold
  initial_state: true
  trigger:
    # - platform: state
    #   entity_id: sensor.0x158d0001b94abe_action
    #   to: 'hold'
    - platform: event
      event_type: xiaomi_aqara.click
      event_data:
        entity_id: sensor.0x158d0001b94abe_action
        click_type: hold
  condition:
    - condition: template
      value_template: "{{ is_state('light.mirror_light_b','off') and is_state('switch.0x158d0002a36433_channel_2','off') }}"
  action:
    - service: switch.turn_on
      entity_id: switch.0x158d0002a36433_channel_2
              
# ##################################
# Bathroom Fan - Auto Off
# ##################################
- alias: bathroom_fan_auto_off
#  id: bathroom_fan_auto_off
  initial_state: true
  trigger:
    - platform: state
      entity_id: binary_sensor.high_humidity_b
      to: 'off'
    - platform: homeassistant
      event: start
    - platform: event
      event_type: automation_reloaded
  condition:
    - condition: state
      entity_id: timer.fan_b
      state: 'idle'
    - condition: state
      entity_id: binary_sensor.high_humidity_b
      state: 'off'
  action:
    - service: switch.turn_off
      entity_id: switch.esp32_bathroom_node_relay_3, switch.sonoff_pow_r2_1_bottom_fan

# ##################################
# Bathroom Fan - Off with light
# ##################################
- alias: bathroom_fan_off_with_light
#  id: bathroom_fan_off_with_light
  initial_state: true
  trigger:
    - platform: state
      entity_id: binary_sensor.light_b
      to: 'on'
  condition:
    - condition: state
      entity_id: timer.fan_b
      state: 'idle'
    - condition: template
      value_template: "{{ is_state('switch.esp32_bathroom_node_relay_3','on') or is_state('switch.sonoff_pow_r2_1_bottom_fan','on') }}"
  action:
    - service: switch.turn_off
      entity_id: switch.esp32_bathroom_node_relay_3, switch.sonoff_pow_r2_1_bottom_fan

# ##################################
# Bathroom Fan - Auto On
# ##################################
- alias: bathroom_fan_auto_on
#  id: bathroom_fan_auto_on
  initial_state: true
  trigger:
    - platform: state
      entity_id: binary_sensor.high_humidity_b
      to: 'on'
    - platform: homeassistant
      event: start
    - platform: event
      event_type: automation_reloaded
    - platform: time_pattern
      minutes: '/5'
  condition:
    - condition: state
      entity_id: timer.fan_b
      state: 'idle'
    - condition: state
      entity_id: binary_sensor.light_b
      state: 'off'
    - condition: state
      entity_id: binary_sensor.high_humidity_b
      state: 'on'
  action:
    - service: switch.turn_on
      entity_id: switch.sonoff_pow_r2_1_bottom_fan
    - condition: state
      entity_id: switch.esp32_bathroom_node_relay_4
      state: 'off'
    - service: switch.turn_on
      entity_id: switch.esp32_bathroom_node_relay_3
      

# ##################################
# Bathroom - Bottom Fan On
# ##################################
- alias: bathroom_bottom_fan
#  id: bathroom_bottom_fan
  initial_state: true
  trigger:
    - platform: time
      at: '07:00:03'
    - platform: time
      at: '23:00:03'
  condition:
    - condition: state
      entity_id: input_boolean.security_mode
      state: 'off'
  action:
    - service: switch.turn_{%if states('binary_sensor.tod_day')%}off{%else%}on{%endif%}
      entity_id: switch.sonoff_pow_r2_1_bottom_fan

# ##################################
# Bathroom - Bottom Fan Toggle
# ##################################
- alias: bathroom_bottom_fan_toggle
#  id: bathroom_bottom_fan_toggle
  initial_state: true
  trigger:
    - platform: time_pattern
      minutes: "/30"
  condition:
    - condition: state
      entity_id: binary_sensor.tod_day
      state: 'off'
    - condition: state
      entity_id: input_boolean.security_mode
      state: 'off'
  action:
    - condition: template
      value_template: "{{ is_state('group.lights_b','off') or is_state('switch.sonoff_pow_r2_1_bottom_fan','on') }}"
    - service: switch.turn_{%if is_state('switch.sonoff_pow_r2_1_bottom_fan','on')%}off{%else%}on{%endif%} #service: switch.toggle
      entity_id: switch.sonoff_pow_r2_1_bottom_fan

# ##################################
# Bathroom - Main Fan Off by Timer
# ##################################
- alias: bathroom_fan_off_by_timer
#  id: bathroom_fan_off_by_timer
  initial_state: true
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.fan_b
  action:
    - service: switch.turn_off
      entity_id: switch.esp32_bathroom_node_relay_3