  system_start:
    alias: System start script
    sequence:
      - action: timer.{{'start' if is_state('group.lights_t','on') else 'cancel'}}
        entity_id: timer.main_light_t
      - action: timer.{{'start' if is_state('fan.esp32_node_b_fan_t','on') else 'cancel'}}
        entity_id: timer.fan_t
      - action: timer.{{'start' if is_state('light.round_led_k','on') else 'cancel'}}
        entity_id: timer.main_light_k
      - action: timer.{{'start' if is_state('fan.esp32_node_b_fan_b','on') else 'cancel'}}
        entity_id: timer.fan_b
      - action: timer.{{'start' if is_state('fan.sonoff_pow_r2_1_bottom_fan','on') else 'cancel'}}
        entity_id: timer.fan_bottom_b
      - action: timer.{{'start' if is_state('group.lights_main_hb','on') else 'cancel'}}
        entity_id: timer.main_light_hb
      - action: timer.{{'start' if is_state('group.lights_st','on') else 'cancel'}}
        entity_id: timer.main_light_st
      - action: timer.{{'start' if is_state('light.d1mini_bed_leds_strip_dima','on') else 'cancel'}}
        entity_id: timer.led_strip_bed_dima_v
      - action: timer.{{'start' if is_state('light.d1mini_bed_leds_strip_sandra','on') else 'cancel'}}
        entity_id: timer.led_strip_bed_sandra_v
      - action: timer.{{'start' if is_state('group.lights_b','on') else 'cancel'}}
        entity_id: timer.main_light_b
      - if:
          - condition: state
            entity_id: binary_sensor.0x00158d000232ddd6_contact
            state: 'off'
        then:
          - action: light.turn_off
            entity_id: light.esp32_node_hs_toilet
      - action: light.turn_off
        entity_id: light.esp32_strip_1s_wadrobe_hb_rgb, light.esp32_strip_1s_entrance_hb_rgb, light.mono_strip_1_light, light.esp32_node_k_light
        data:
          transition: 30
      - action: script.sasha_presence
      - action: script.washing_machine_state
      - if:
          - condition: state
            entity_id: switch.system_security_mode
            state: 'on'
        then:
          - action: script.turn_on
            entity_id: script.away_mode_on
      - action: homeassistant.update_entity
        entity_id:
          - sensor.start_time_cmd
          - sensor.errors_during_boot
          - sensor.warnings_during_boot
      - if:
          - condition: template
            value_template: >-
              {%- set datanames = namespace(sw_un=[]) -%}
              {%- for item in states.switch if ( ( item.state == 'unknown' and '_restart_key' in item.entity_id) )-%}
                {%- set datanames.sw_un = datanames.sw_un + [item.entity_id] -%}
              {%- endfor %}
              {%- set num_sw_un = datanames.sw_un | length %}
              {%- set sw_un = datanames.sw_un | join(', ') %}
              {{ num_sw_un|int >0 }}
        then:
          - action: switch.turn_on
            data:
              entity_id: >-
                {%- set datanames = namespace(sw_un=[]) -%}
                {%- for item in states.switch if ( ( item.state == 'unknown' and '_restart_key' in item.entity_id) )-%}
                  {%- set datanames.sw_un = datanames.sw_un + [item.entity_id] -%}
                {%- endfor %}
                {%- set num_sw_un = datanames.sw_un | length %}
                {%- set sw_un = datanames.sw_un | join(', ') %}
                {{ sw_un }}
      - wait_for_trigger:
          - platform: state
            entity_id: binary_sensor.bottom_lock, binary_sensor.top_lock
        timeout: 
          seconds: 10
        continue_on_timeout: true
      - action: script.turn_on
        entity_id: script.domofon_locks_indicator
      - if:
          - condition: state
            entity_id: binary_sensor.presence_b
            state: 'on'
        then:
          - action: timer.cancel
            entity_id: timer.main_light_b
      - if:
          - condition: state
            entity_id: binary_sensor.presence_t
            state: 'on'
        then:
          - action: timer.cancel
            entity_id: timer.main_light_t



  sasha_presence:
    alias: Sasha presence
    sequence:
      - action: device_tracker.see
        data:
          dev_id: sasha
          location_name: "{% if is_state('input_boolean.sasha_tracker','on')%}home{%else%}not_home{%endif%}"